{"version":3,"sources":["services/AuthenticationService.js","components/PrivateRoute.js","assets/images/Authpage_background.jpg","assets/images/logo.svg","Views/AuthenticationView/State/Views.js","Views/AuthenticationView/Components/LoginView/LoginView.js","Views/AuthenticationView/Components/StartView/StartView.js","Views/AuthenticationView/Components/DisplayIconPicker/DisplayIconPicker.js","assets/images/DisplayEmojis/DisplayEmojis.js","assets/images/DisplayEmojis/emoji1.svg","assets/images/DisplayEmojis/emoji2.svg","assets/images/DisplayEmojis/emoji3.svg","assets/images/DisplayEmojis/emoji4.svg","assets/images/DisplayEmojis/emoji5.svg","assets/images/DisplayEmojis/emoji6.svg","assets/images/DisplayEmojis/emoji7.svg","assets/images/DisplayEmojis/emoji8.svg","assets/images/DisplayEmojis/emoji9.svg","assets/images/DisplayEmojis/emoji10.svg","assets/images/DisplayEmojis/emoji11.svg","assets/images/DisplayEmojis/emoji12.svg","assets/images/DisplayEmojis/emoji13.svg","assets/images/DisplayEmojis/emoji14.svg","assets/images/DisplayEmojis/emoji15.svg","assets/images/DisplayEmojis/emoji16.svg","assets/images/DisplayEmojis/emoji17.svg","assets/images/DisplayEmojis/emoji18.svg","assets/images/DisplayEmojis/emoji19.svg","assets/images/DisplayEmojis/emoji20.svg","assets/images/DisplayEmojis/emoji21.svg","assets/images/DisplayEmojis/emoji22.svg","assets/images/DisplayEmojis/emoji23.svg","assets/images/DisplayEmojis/emoji24.svg","assets/images/DisplayEmojis/emoji25.svg","assets/images/DisplayEmojis/emoji26.svg","assets/images/DisplayEmojis/emoji27.svg","assets/images/DisplayEmojis/emoji28.svg","Views/AuthenticationView/Components/RegisterView/RegisterView.js","Views/AuthenticationView/AuthenticationView.js","components/DoodlerHeader.js","Views/HomeView/Components/Lobbies.js","Views/HomeView/Components/UserProfile.js","Views/HomeView/Components/Home.js","Views/HomeView/HomeView.js","assets/images/pencil.svg","Views/CreateLobbyView/Components/JoinedUser/JoinedUser.js","Views/CreateLobbyView/Components/ParticipantView/ParticipantView.js","Views/CreateLobbyView/Components/CustomizeView/CustomizeView.js","assets/images/timerIcon.svg","assets/images/eraserIcon.svg","Views/GameView/Components/GameBoardOptions.js","Views/GameView/Components/GameBoard.js","Views/GameView/Components/ChatView/ChatMessage.js","Views/GameView/Components/ChatView/ChatContainer.js","assets/images/clock.svg","Views/GameView/Components/Timer/Timer.js","Views/GameView/Components/GameOverModal/GameOverModal.js","assets/sounds/correctWord.mp3","assets/sounds/turnStart.mp3","Views/GameView/Components/Game.js","Views/GameView/GameView.js","Views/CreateLobbyView/Components/CreateLobbyModal/CreateLobbyModal.js","Views/CreateLobbyView/Components/InviteLinkModal/InviteLinkModal.js","Views/CreateLobbyView/CreateLobbyView.js","assets/sounds/userJoined.mp3","assets/sounds/userLeft.mp3","App.js","index.js"],"names":["tokenName","displayName","emojiName","isGuestName","idName","AuthenticationService","isAuthenticated","localStorage","getItem","verifyToken","Promise","resolve","reject","token","Axios","get","headers","then","catch","Error","logout","this","deleteToken","deleteDisplayName","deleteEmojiId","deleteIsGuest","deleteId","saveToken","setItem","removeItem","getToken","saveDisplayName","name","getDisplayName","saveEmojiId","id","getEmojiId","parseInt","saveIsGuest","value","getIsGuest","saveId","getId","PrivateRoute","Component","component","rest","render","props","authenticationService","to","pathname","state","from","location","Views","Start","Login","Register","Guest","toast","configure","LoginView","email","useRef","password","handleKeyPressed","e","a","key","handleLogin","post","current","response","data","user","emojiId","isGuest","handleRedirect","console","log","error","Grid","container","spacing","item","xs","IconButton","onClick","setView","className","alt","src","Logo","TextField","onKeyDown","inputRef","label","variant","fullWidth","type","StartView","style","width","DisplayIconPicker","newIndex","index","icons","length","setIndex","RegisterView","useState","emojiIndex","setEmojiIndex","handleRegister","undefined","justify","Emojis","AuthenticationView","renderedView","views","router","useHistory","push","backgroundImage","Background","Container","maxWidth","useStyles","makeStyles","theme","root","paper","padding","textAlign","color","palette","text","secondary","boxShadow","logo","minWidth","DoodleHeader","classes","sm","Paper","LobbyTableCell","withStyles","head","backgroundColor","primary","main","common","white","body","fontSize","TableCell","LobbyTableRow","action","hover","TableRow","tableContainer","maxHeight","overflowY","scroll","minHeight","Lobbies","rooms","refresh","TableContainer","autoHide","Table","stickyHeader","aria-label","TableHead","align","TableBody","map","room","scope","Typography","isPrivate","isSpellCheck","userCount","Button","display","justifyContent","alignItems","flexGrow","gridContainer","height","displayIconEmoji","bigButton","logoutGrid","logoutButton","UserProfile","handleCreate","handleAutoJoin","handleLogout","setisGuest","setEmojiId","setDisplayName","useEffect","size","lobbies","grey","userProfile","Home","setRooms","getAllRooms","roomId","HomeView","JoinedUser","score","isHost","isVisible","isDrawing","isCorrect","visibility","pencil","ParticipantView","isGame","scores","handleInviteLink","users","hostId","drawingUserId","correctUserIds","getJoinedUsers","userList","i","find","found","s","disableElevation","borderRadius","disabledButton","CustomizeView","initialRoomSettings","setIsPrivate","setPassword","rounds","setRounds","timer","setTimer","isSpellcheck","setIsSpellcheck","delayPassword","_","debounce","updateRoom","updatePassword","margin","FormControlLabel","checked","control","Switch","onChange","event","target","placeholder","InputLabelProps","shrink","marginTop","FormControl","InputLabel","Select","native","startGame","disabled","canStartGame","COLORS","optionsContainer","bottom","right","position","penSizeOptionsContainer","cursor","penSizeOptions","verticalAlign","penSize","colorOptionsContainer","colorSizeOptions","clearOptionContainer","top","left","eraserIcon","marginRight","marginBottom","GameBoardOptions","anchorEl","setAnchorEl","openColorPopper","setOpenColorPopper","openPenPopper","setOpenPenPopper","menuContent","setMenuContent","setPenSize","activeColor","setActiveColor","clearBoard","penType","fillBoard","setPenType","handleClick","option","currentTarget","handleColorChangeComplete","hex","handlePenOptionClick","optionType","getMenuContent","Lens","FormatColorFill","SvgIcon","d","onChangeComplete","colors","Popper","open","placement","transition","onMouseLeave","TransitionProps","Fade","timeout","getPenOptionsIcon","Palette","Clear","gameBoard","flex","gameBoardCanvas","userSelect","gameBoardBottom","GameBoard","context","socket","setDisplayPen","isYourTurn","canvasRef","testTime","noDrawingEvents","queue","items","enqueue","dequeue","shift","peek","readFromQueue","waitTime","drawFromEvent","setTimeout","time","window","addEventListener","onResize","on","onDrawingEvent","removeEventListener","canvas","getContext","onMouseDown","onMouseUp","throttle","onMouseMove","emit","w","h","beginPath","rect","fillStyle","fill","clearRect","drawLine","x0","y0","x1","y1","penColor","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","difference","Date","getTime","getXCord","evt","getBoundingClientRect","getYCord","X","Y","callback","delay","previousCall","apply","arguments","parentEl","document","getElementById","clientWidth","clientHeight","eventType","onMouseOut","onMouseOver","ref","chatMessageContainer","flexDirection","fontWeight","marginLeft","correct","ChatMessage","chatContainer","overflow","chatOutputContainer","paddingRight","paddingLeft","chatInputContainer","chatHeader","wordOptions","word","ChatContainer","onNewWord","words","setMissSpelledWords","missSpelledWords","suggetions","setWord","openPopper","setOpenPopper","newWord","Chip","replace","handleSuggestionClick","trim","toLowerCase","v","handleOnChange","Timer","clockImage","GameOverModal","isOpen","topUsers","handlePlayAgain","getPlaces","place","placeText","createPodium","overlayClassName","game","gameBoardPen","backgroundPosition","backgroundRepeat","backgroundSize","pointerEvents","zIndex","gridItem","gridItemGame","gameHeader","gameHeaderPaper","wordPicker","background","wordGrid","gridGap","gridTemplateColumns","wordHint","whiteSpace","headerItems","Game","Howler","volume","gameBoardPenRef","displayPen","setWords","chooseWords","setChooseWords","turnStarted","setTurnStarted","setIsYourTurn","turnEnded","setTurnEnded","correctWord","setCorrectWord","round","setRound","setWordHint","isGameOver","setIsGameOver","setTopUsers","setSuggetions","turnEndedAnimation","useSpring","opacity","turnStartedAnimation","correctWordSound","Howl","correctWordSrc","turnStartSound","turnStartSrc","handleNewGuess","play","oldWords","userId","totalRounds","toUpperCase","handleGameOver","suggestions","pageX","pageY","onPenMove","div","difficulty","handleWordSelection","timeLeft","corpus","GameView","Modal","setAppElement","CreateLobbyModal","isValidRoom","isPrivateRoom","validatePassword","errorMessage","showModal","InviteLinkModal","setIsOpen","onRequestClose","Close","href","tempInput","createElement","appendChild","select","execCommand","removeChild","info","Link","header","customizeViewGridItem","breakpoints","down","CreateLobbyView","useParams","setIsHost","isLoading","setIsLoading","setIsPrivateRoom","setRoomSettings","setIsValidRoom","isInviteLinkOpen","setIsInviteLinkOpen","setUsers","setHostId","isGameStarted","setIsGameStarted","setIsSpellCheck","setErrorMessage","setDrawingUserId","setCorrectUserIds","setCanStartGame","setScores","joinedSound","joinedSoundSrc","leftSound","leftSoundSrc","handleRefresh","confirmationMessage","returnValue","updatedData","patch","connectToRoom","io","query","disconnect","oldIds","oldUsers","userConnected","filter","userDisconnected","toString","newHost","handleNewScores","resetGame","GetRoomInformation","md","axios","defaults","baseURL","packageJson","proxy","App","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1a4a9a2c.chunk.js","sourcesContent":["\r\nimport Axios from 'axios';\r\n\r\nconst tokenName = 'token';\r\nconst displayName = 'displayName';\r\nconst emojiName = 'emojiId';\r\nconst isGuestName = 'isGuest';\r\nconst idName = 'id';\r\n\r\nconst AuthenticationService = {\r\n\r\n    isAuthenticated() {\r\n        return localStorage.getItem(tokenName);    \r\n    },\r\n\r\n    verifyToken: () => {\r\n        var promise = new Promise((resolve, reject) => {\r\n\r\n            let token = localStorage.getItem(tokenName);\r\n            if (!token) {\r\n                reject(Error(\"No token\"));\r\n                return;\r\n            }\r\n\r\n            Axios.get('/user/verify', {\r\n                headers: {\r\n                    'token': token\r\n                }\r\n            })\r\n            .then(() => {\r\n                resolve(\"Token is valid\")\r\n            })\r\n            .catch(() => {\r\n                reject(Error(\"Token is not valid\"))\r\n            })\r\n                \r\n        });\r\n        return promise;\r\n    },\r\n\r\n    logout: function() {\r\n        this.deleteToken();\r\n        this.deleteDisplayName();\r\n        this.deleteEmojiId();\r\n        this.deleteIsGuest();\r\n        this.deleteId();\r\n    },\r\n\r\n    // Token methods\r\n    saveToken(token){\r\n        localStorage.setItem(tokenName, token);\r\n    },\r\n\r\n    deleteToken() {\r\n        localStorage.removeItem(tokenName);\r\n    },\r\n\r\n    getToken() {\r\n        return localStorage.getItem(tokenName);\r\n    },\r\n\r\n    // User object methods\r\n    saveDisplayName(name) {\r\n        localStorage.setItem(displayName, name);\r\n    },\r\n\r\n    getDisplayName() {\r\n        return localStorage.getItem(displayName);\r\n    },\r\n\r\n    deleteDisplayName() {\r\n        localStorage.removeItem(displayName);\r\n    },\r\n\r\n    saveEmojiId(id) {\r\n        localStorage.setItem(emojiName, `${id}`);\r\n    },\r\n\r\n    getEmojiId() {\r\n        return parseInt(localStorage.getItem(emojiName));\r\n    },\r\n\r\n    deleteEmojiId() {\r\n        localStorage.removeItem(emojiName);\r\n    },\r\n\r\n    saveIsGuest(value) {\r\n        localStorage.setItem(isGuestName, `${value}`);\r\n    },\r\n\r\n    getIsGuest() {\r\n        return (localStorage.getItem(isGuestName) == 'true');\r\n    },\r\n\r\n    deleteIsGuest() {\r\n        localStorage.removeItem(isGuestName);\r\n    },\r\n\r\n    saveId(id) {\r\n        localStorage.setItem(idName, `${id}`);\r\n    },\r\n\r\n    getId() {\r\n        return localStorage.getItem(idName);\r\n    },\r\n\r\n    deleteId() {\r\n        localStorage.removeItem(idName);\r\n    },\r\n    \r\n};\r\n\r\nexport default AuthenticationService;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport authenticationService from '../services/AuthenticationService';\r\n\r\nfunction PrivateRoute ({ component: Component, ...rest }) {\r\n    \r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            authenticationService.isAuthenticated() ? \r\n                <Component {...props} />\r\n            : \r\n                <Redirect to={{pathname: \"/login\", state: { from: props.location}}} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","export default __webpack_public_path__ + \"static/media/Authpage_background.53c579d1.jpg\";","export default __webpack_public_path__ + \"static/media/logo.e9875a4f.svg\";","const Views = {\r\n    Start: 1,\r\n    Login: 2,\r\n    Register: 3,\r\n    Guest: 4\r\n};\r\n\r\nexport default Views;","import { React, useRef } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { IconButton, TextField, Grid } from '@material-ui/core';\r\nimport Logo from '../../../../assets/images/logo.svg';\r\nimport Views from '../../State/Views';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nfunction LoginView(props) {\r\n\r\n  const email = useRef();\r\n  const password = useRef();\r\n  \r\n  async function handleKeyPressed(e) {\r\n    if (e.key === 'Enter')\r\n      await handleLogin();\r\n  }\r\n\r\n  async function handleLogin() {\r\n\r\n    try {\r\n      const response = await Axios.post('/user/login', { \r\n        email: email.current.value,\r\n        password: password.current.value\r\n      });\r\n      \r\n      // login success\r\n      authenticationService.saveToken(response.data.token);\r\n      authenticationService.saveDisplayName(response.data.user.name);\r\n      authenticationService.saveEmojiId(response.data.user.emojiId);\r\n      authenticationService.saveIsGuest(response.data.user.isGuest);\r\n      authenticationService.saveId(response.data.user.id);\r\n\r\n      await authenticationService.verifyToken();\r\n      props.handleRedirect();     \r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Authentication error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <IconButton onClick={() => props.setView(Views.Start)}><ArrowBackIcon /></IconButton>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <img className=\"authentication-logo\" alt=\"Logo\" src={Logo}></img>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField onKeyDown={handleKeyPressed} inputRef={email} label=\"Email\" variant=\"outlined\" fullWidth type=\"email\"/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField onKeyDown={handleKeyPressed} inputRef={password} label=\"Password\" variant=\"outlined\" fullWidth type=\"password\"/>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <button onClick={handleLogin} className='login-button login-color'>Login</button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;","import React from 'react';\r\nimport './StartView.css';\r\nimport Logo from '../../../../assets/images/logo.svg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Views from '../../State/Views';\r\n\r\n\r\nfunction StartView(props) {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid className=\"logo-container\" item xs={12}>\r\n          <img style={{width: '80%'}} id=\"authentication-logo\" alt=\"Logo\" src={Logo}></img>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <button onClick={() => props.setView(Views.Login)} className='login-button login-color'>Login</button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <button onClick={() => props.setView(Views.Guest)} className='login-button guest-color'>Play As Guest</button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n            <h6 className=\"register-text\">Dont have an account? <span>\r\n                    <button onClick={() => props.setView(Views.Register)} className=\"register-button\">Register</button>\r\n                </span>\r\n            </h6>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartView;","import React from 'react';\r\nimport './DisplayIconPicker.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nfunction DisplayIconPicker(props) {\r\n\r\n    function increaseIndex() {\r\n        let newIndex = (props.index + 1) % props.icons.length;\r\n        props.setIndex(newIndex);\r\n    }\r\n\r\n    function decreaseIndex() {\r\n        let newIndex = (((props.index - 1) % props.icons.length) + props.icons.length) % props.icons.length;\r\n        props.setIndex(newIndex);\r\n    }\r\n\r\n    return (\r\n        <div className='displayiconpicker-container'>\r\n            <IconButton onClick={decreaseIndex}><ArrowBackIosIcon /></IconButton>\r\n            <img className=\"displayiconpicker-emoji\" alt=\"Logo\" src={props.icons[props.index]}></img>\r\n            <IconButton onClick={increaseIndex}><ArrowForwardIosIcon /></IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayIconPicker;","import e1 from './emoji1.svg';\r\nimport e2 from './emoji2.svg';\r\nimport e3 from './emoji3.svg';\r\nimport e4 from './emoji4.svg';\r\nimport e5 from './emoji5.svg';\r\nimport e6 from './emoji6.svg';\r\nimport e7 from './emoji7.svg';\r\nimport e8 from './emoji8.svg';\r\nimport e9 from './emoji9.svg';\r\nimport e10 from './emoji10.svg';\r\nimport e11 from './emoji11.svg';\r\nimport e12 from './emoji12.svg';\r\nimport e13 from './emoji13.svg';\r\nimport e14 from './emoji14.svg';\r\nimport e15 from './emoji15.svg';\r\nimport e16 from './emoji16.svg';\r\nimport e17 from './emoji17.svg';\r\nimport e18 from './emoji18.svg';\r\nimport e19 from './emoji19.svg';\r\nimport e20 from './emoji20.svg';\r\nimport e21 from './emoji21.svg';\r\nimport e22 from './emoji22.svg';\r\nimport e23 from './emoji23.svg';\r\nimport e24 from './emoji24.svg';\r\nimport e25 from './emoji25.svg';\r\nimport e26 from './emoji26.svg';\r\nimport e27 from './emoji27.svg';\r\nimport e28 from './emoji28.svg';\r\n\r\n\r\nexport default [\r\n    e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28\r\n];","export default __webpack_public_path__ + \"static/media/emoji1.dc74cf24.svg\";","export default __webpack_public_path__ + \"static/media/emoji2.a7358144.svg\";","export default __webpack_public_path__ + \"static/media/emoji3.a668302d.svg\";","export default __webpack_public_path__ + \"static/media/emoji4.cec52361.svg\";","export default __webpack_public_path__ + \"static/media/emoji5.16106a38.svg\";","export default __webpack_public_path__ + \"static/media/emoji6.fe03129a.svg\";","export default __webpack_public_path__ + \"static/media/emoji7.d778670d.svg\";","export default __webpack_public_path__ + \"static/media/emoji8.1af10857.svg\";","export default __webpack_public_path__ + \"static/media/emoji9.8af0409a.svg\";","export default __webpack_public_path__ + \"static/media/emoji10.c1d505dc.svg\";","export default __webpack_public_path__ + \"static/media/emoji11.8ef6e480.svg\";","export default __webpack_public_path__ + \"static/media/emoji12.8a6c3ed8.svg\";","export default __webpack_public_path__ + \"static/media/emoji13.e1f3a501.svg\";","export default __webpack_public_path__ + \"static/media/emoji14.377c2ec5.svg\";","export default __webpack_public_path__ + \"static/media/emoji15.039f7cc3.svg\";","export default __webpack_public_path__ + \"static/media/emoji16.54747372.svg\";","export default __webpack_public_path__ + \"static/media/emoji17.0f5ec1b1.svg\";","export default __webpack_public_path__ + \"static/media/emoji18.a1df4c65.svg\";","export default __webpack_public_path__ + \"static/media/emoji19.c34b03f5.svg\";","export default __webpack_public_path__ + \"static/media/emoji20.a59e0401.svg\";","export default __webpack_public_path__ + \"static/media/emoji21.44399be4.svg\";","export default __webpack_public_path__ + \"static/media/emoji22.e866e98f.svg\";","export default __webpack_public_path__ + \"static/media/emoji23.609141c1.svg\";","export default __webpack_public_path__ + \"static/media/emoji24.8a85d073.svg\";","export default __webpack_public_path__ + \"static/media/emoji25.c68f7ec5.svg\";","export default __webpack_public_path__ + \"static/media/emoji26.c2f458a8.svg\";","export default __webpack_public_path__ + \"static/media/emoji27.75267a83.svg\";","export default __webpack_public_path__ + \"static/media/emoji28.280c93fa.svg\";","import { React, useState, useRef } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { TextField, Grid, IconButton } from '@material-ui/core';\r\nimport Logo from '../../../../assets/images/logo.svg';\r\nimport Views from '../../State/Views';\r\nimport DisplayIconPicker from '../DisplayIconPicker/DisplayIconPicker';\r\nimport Emojis from '../../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nfunction RegisterView(props) {\r\n\r\n    const [emojiIndex, setEmojiIndex] = useState(0);\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const name = useRef();\r\n\r\n    async function handleKeyPressed(e) {\r\n        if (e.key === 'Enter')\r\n          await handleRegister();\r\n    }\r\n    \r\n    async function handleRegister() {\r\n\r\n        try {\r\n            const response = await Axios.post('/user/register', { \r\n                email: email.current ? email.current.value : undefined,\r\n                password: password.current ? password.current.value : undefined,\r\n                name: name.current ? name.current.value : \"\",\r\n                emojiId: emojiIndex,\r\n                isGuest: props.isGuest\r\n            });\r\n            \r\n            // register success\r\n            authenticationService.saveToken(response.data.token);\r\n            authenticationService.saveDisplayName(response.data.user.name);\r\n            authenticationService.saveEmojiId(response.data.user.emojiId);\r\n            authenticationService.saveIsGuest(response.data.user.isGuest);\r\n            authenticationService.saveId(response.data.user.id);\r\n\r\n            await authenticationService.verifyToken();\r\n            props.handleRedirect();     \r\n        }\r\n        catch (error) {\r\n            toast.error(\"Authentication error\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3} justify=\"center\">\r\n            <Grid item xs={12}>\r\n                <IconButton onClick={() => props.setView(Views.Start)}><ArrowBackIcon /></IconButton>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <img className=\"authentication-logo\" alt=\"Logo\" src={Logo}></img>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <DisplayIconPicker icons={Emojis} setIndex={setEmojiIndex} index={emojiIndex}/>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <TextField onKeyDown={handleKeyPressed} inputRef={name} label=\"Display Name\" variant=\"outlined\" fullWidth/>\r\n            </Grid>\r\n\r\n            { !props.isGuest &&\r\n                <Grid item xs={12}>\r\n                    <TextField onKeyDown={handleKeyPressed} inputRef={email} label=\"Email\" variant=\"outlined\" fullWidth type=\"email\"/>\r\n                </Grid>\r\n            }\r\n\r\n            { !props.isGuest &&\r\n                <Grid item xs={12}>\r\n                    <TextField onKeyDown={handleKeyPressed} inputRef={password} label=\"Password\" variant=\"outlined\" fullWidth type=\"password\"/>\r\n                </Grid>\r\n            }  \r\n            \r\n            <Grid item xs={12}>\r\n                <button onClick={handleRegister} className='login-button login-color'>{props.isGuest ? \"Play\" : \"Register\"}</button>\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterView;","import React, {useState} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './AuthenticationView.css';\r\nimport Background from '../../assets/images/Authpage_background.jpg';\r\nimport LoginView from './Components/LoginView/LoginView';\r\nimport StartView from './Components/StartView/StartView';\r\nimport RegisterView from './Components/RegisterView/RegisterView';\r\nimport Views from './State/Views';\r\n\r\nfunction AuthenticationView(props) {\r\n  \r\n  const [views, setView] = useState(Views.Start);\r\n  const router = useHistory();\r\n\r\n\r\n  let renderedView;\r\n  switch (views) {\r\n    case Views.Start:\r\n      renderedView = (<StartView setView={setView}/>);\r\n      break;\r\n    case Views.Login:\r\n      renderedView = (<LoginView setView={setView} handleRedirect={handleRedirect}/>)\r\n      break;\r\n    case Views.Register:\r\n      renderedView = (<RegisterView isGuest={false} setView={setView} handleRedirect={handleRedirect}/>);\r\n      break;\r\n    case Views.Guest:\r\n      renderedView = (<RegisterView isGuest={true} setView={setView} handleRedirect={handleRedirect}/>);\r\n      break;\r\n  }\r\n\r\n  function handleRedirect() {\r\n    if (props.location && props.location.state && props.location.from) {\r\n      router.push(props.location.state.from.pathname);\r\n    }\r\n    else{\r\n      router.push(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='authentication-view' style={{ backgroundImage: `url(${Background})` }}>\r\n        <Container className='authentication-container' maxWidth='sm'>\r\n          {renderedView}\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthenticationView;","import { React } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n} from '@material-ui/core';\r\nimport Logo from '../assets/images/logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    boxShadow: '10px 10px 0 0 rgba(0,0,0, .2)',\r\n  },\r\n  logo: {\r\n    width: '10%',\r\n    minWidth: '85px'\r\n  }\r\n}));\r\n\r\nconst DoodleHeader = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        xs,\r\n        sm,\r\n    } = props;\r\n\r\n    return (\r\n        <Grid item xs={xs ? xs : 12} sm={sm ? sm : 12}>\r\n            <Paper className={classes.paper}><img className={classes.logo} alt=\"Logo\" src={Logo}></img></Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default DoodleHeader;","import { React } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell, \r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Button,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst LobbyTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n  \r\nconst LobbyTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        maxHeight: '70vh',\r\n        overflowY: 'hidden',\r\n    },\r\n    scroll: {\r\n        minHeight: '69vh',\r\n        minWidth: 700,\r\n    }\r\n}));\r\n\r\nconst Lobbies = ({rooms, refresh}) => {\r\n    const classes = useStyles();\r\n    const router = useHistory();\r\n\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n       <Scrollbars autoHide className={classes.scroll}>\r\n        { (rooms) &&\r\n            <Table stickyHeader aria-label=\"lobby table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                <LobbyTableCell>Room #</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\">Status</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\">Spellcheck</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\">Players</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\"><IconButton onClick={refresh} variant=\"contained\" style={{color: \"#ffffff\"}}><RefreshIcon/></IconButton></LobbyTableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            \r\n            <TableBody>\r\n                {rooms.map((room) => (\r\n                <LobbyTableRow key={room.id}>\r\n                    <LobbyTableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"h6\">{room.id}</Typography>\r\n                    </LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\"><Typography variant=\"h6\">{!room.isPrivate ? \"Open\" : \"Private\"}</Typography></LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\">{room.isSpellCheck ? <SpellcheckIcon color=\"secondary\"/> : ''}</LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\"><Typography variant=\"h6\">{ `${room.userCount}/8`}</Typography></LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\"><Button onClick={() => router.push(`/rooms/${room.id}`)} variant=\"contained\" color=\"secondary\">JOIN</Button></LobbyTableCell>\r\n                </LobbyTableRow>\r\n                ))}\r\n            </TableBody>\r\n            </Table>\r\n        }\r\n        </Scrollbars>\r\n      </TableContainer>\r\n    );\r\n}\r\n\r\nexport default Lobbies;","import { React, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Emojis from '../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport authenticationService from '../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexGrow: 1,\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  displayIconEmoji: {\r\n    width: '33%',\r\n  },\r\n  bigButton: {\r\n      height: '100%',\r\n      width: '100%',\r\n  },\r\n  logoutGrid: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n  },\r\n  logoutButton: {\r\n      fontSize: '1rem',\r\n  }\r\n}));\r\n\r\nconst UserProfile = ({ handleCreate, handleAutoJoin, handleLogout }) => {\r\n    const classes = useStyles();\r\n\r\n    const [isGuest, setisGuest] = useState(false);\r\n    const [emojiId, setEmojiId] = useState(0);\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setDisplayName(authenticationService.getDisplayName());\r\n        setEmojiId(authenticationService.getEmojiId());\r\n        setisGuest(authenticationService.getIsGuest());\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid className={classes.gridContainer} container spacing={3}>\r\n                <Grid className={classes.logoutGrid} item xs={12}>\r\n                    <Button className={classes.logoutButton} color=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <div>\r\n                            <img className={classes.displayIconEmoji} alt=\"User Icon\" src={Emojis[emojiId]}></img>\r\n                            <Typography variant=\"h6\">{displayName}</Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Button onClick={handleAutoJoin} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">QUICK JOIN</Button>\r\n                </Grid>\r\n                { !isGuest &&\r\n                <Grid item xs={12} sm={12}>\r\n                    <Button onClick={handleCreate} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">CREAT LOBBY</Button>\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","import { React, useRef, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Background from '../../../assets/images/Authpage_background.jpg';\r\nimport DoodleHeader from '../../../components/DoodlerHeader.js'\r\nimport Lobbies from './Lobbies';\r\nimport UserProfile from './UserProfile';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: `url(${Background})`,\r\n    flexGrow: 1,\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  lobbies: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  userProfile: {\r\n    backgroundColor: theme.palette.grey[200],\r\n    padding: theme.spacing(3)\r\n  },\r\n  logo: {\r\n    width: '10%',\r\n  }\r\n}));\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n    const router = useHistory();\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n      getAllRooms();\r\n    }, []);\r\n\r\n    const getLoobbiesTableHeader = () => {\r\n        return `${rooms.length ? 'We found some games that you could join!' : 'No one is playing right now :( Start a game and invite your friends!'}`\r\n    }\r\n\r\n    function handleLogout() {\r\n      authenticationService.logout();\r\n      router.push('/login');\r\n    }\r\n\r\n    async function handleCreate() {\r\n        try {\r\n          const response = await Axios.post('/room/create', {}, {\r\n            headers: {\r\n              token: authenticationService.getToken()\r\n            }\r\n          });\r\n          router.push(`/rooms/${response.data.room.id}`);\r\n        }\r\n        catch {\r\n          toast.error(\"Error joining room\");\r\n        }  \r\n    }\r\n\r\n    async function getAllRooms() {\r\n      try {\r\n        const response = await Axios.get('/room/all', {\r\n          headers: {\r\n            token: authenticationService.getToken()\r\n          }\r\n        });\r\n        setRooms(response.data.rooms);\r\n      }\r\n      catch {}\r\n    }\r\n\r\n    async function handleAutoJoin() {\r\n      try {\r\n        const response = await Axios.get('/room/random', {\r\n          headers: {\r\n            token: authenticationService.getToken()\r\n          }\r\n        });\r\n\r\n        router.push(`/rooms/${response.data.roomId}`);\r\n      }\r\n      catch {\r\n        toast.error(\"No rooms found\");\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid className={classes.gridContainer} container spacing={3}>\r\n                    <DoodleHeader />\r\n                <Grid item xs={12} sm={8}>\r\n                    <Paper className={classes.paper, classes.lobbies}>\r\n                        <Typography variant=\"h5\">{getLoobbiesTableHeader()}</Typography><br/>\r\n                        <Lobbies refresh={getAllRooms} rooms={rooms}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Paper className={classes.paper, classes.userProfile}><UserProfile handleLogout={handleLogout} handleAutoJoin={handleAutoJoin} handleCreate={handleCreate}/></Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from './Components/Home.js'\r\n\r\n\r\nfunction HomeView(props) {\r\n  return <Home />\r\n}\r\n\r\nexport default HomeView;","export default __webpack_public_path__ + \"static/media/pencil.57559400.svg\";","import React from 'react';\r\nimport './JoinedUser.css';\r\nimport Emojis from '../../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport pencil from '../../../../assets/images/pencil.svg';\r\n\r\nfunction JoinedUser({score, isHost, emojiId, name, isVisible, isDrawing, isCorrect}) {\r\n  return (\r\n    <div className={`JoinedUser-container ${isCorrect ? \"JoinedUser-Correct\" : \"JoinedUser-Regular\"}`}>\r\n        <img style={{visibility: isVisible ? \"visible\" : \"hidden\"}}\r\n          className=\"JoinedUser-icon\" alt=\"Username\" src={Emojis[emojiId]}></img>\r\n        <h3 style={{visibility: isVisible ? \"visible\" : \"hidden\"}}>{name}</h3>\r\n        {isHost && <StarIcon className='leader-icon' style={{ color: \"FFD700\" }}/>}\r\n        {isDrawing && <img className=\"JoinedUser-pencil\" src={pencil} />}\r\n        {score !== undefined && <h5>{`Score: ${score}`}</h5>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinedUser;","import React from 'react';\r\nimport './ParticipantView.css';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport JoinedUser from '../JoinedUser/JoinedUser';\r\nimport {\r\n  Grid,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nfunction ParticipantView({isGame, scores, handleInviteLink, users, hostId, drawingUserId, correctUserIds}) {\r\n\r\n  function getJoinedUsers() {\r\n    let userList = [];\r\n    if (users !== undefined) {\r\n\r\n      for (let i = 0; i < users.length; i++) {\r\n        let user = users[i];\r\n\r\n        //only add unique users\r\n        if (userList.find(i => i.id === user.id))\r\n          continue;\r\n\r\n        let isHost = user.id === hostId;\r\n        let isDrawing = user.id === drawingUserId;\r\n        let isCorrect = false;\r\n        if (correctUserIds && correctUserIds.find(i => i === user.id))\r\n          isCorrect = true;\r\n\r\n        let score = isGame ? 0 : undefined;\r\n        if (scores !== undefined) {\r\n          let found = scores.find(s => s.id === user.id);\r\n          if (found !== undefined && found !== null)\r\n            score = found.score;\r\n        }\r\n\r\n        userList.push(<JoinedUser \r\n          isCorrect={isCorrect} \r\n          isDrawing={isDrawing} \r\n          key={i} \r\n          isVisible={true} \r\n          score={score}\r\n          isHost={isHost} \r\n          emojiId={user.emojiId} \r\n          name={user.name}/>);\r\n      }\r\n    }\r\n\r\n    for (let i=userList.length; i < 8; i++) {\r\n      userList.push(<JoinedUser key={i} isVisible={false}/>);\r\n    }\r\n    return userList;\r\n  }\r\n\r\n  const renderContent = () => (\r\n    <Grid item xs={12} className='ParticipantView-container'>\r\n      <div className='ParticipantView'>\r\n        <div className='joined-container'>\r\n          <GroupIcon/>\r\n          <h4>{`${users.length}/8`}</h4>\r\n        </div>\r\n        <div className='participant-grid'>\r\n          {getJoinedUsers()}\r\n        </div>\r\n        <Button variant=\"contained\" disableElevation style={{\r\n          backgroundColor: \"#CE5BF7\",\r\n          borderRadius: 0,\r\n          color: \"white\"\r\n        }} onClick={handleInviteLink}>\r\n          Invite Link\r\n        </Button>\r\n      </div>\r\n    </Grid>\r\n  )\r\n\r\n  return renderContent()\r\n}\r\n\r\nexport default ParticipantView;","import React, { useState, useRef } from 'react';\r\nimport './CustomizeView.css';\r\nimport { Button, TextField, Switch, FormControlLabel, FormControl, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport _ from \"lodash\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  disabledButton: {\r\n    color: \"white\",\r\n  }\r\n}));\r\n\r\nfunction CustomizeView(props) {\r\n  const classes = useStyles();\r\n  const router = useHistory();\r\n  const [isPrivate, setIsPrivate] = useState(props.initialRoomSettings.isPrivate);\r\n  const [password, setPassword] = useState(props.initialRoomSettings.password ? props.initialRoomSettings.password : \"\");\r\n  const [rounds, setRounds] = useState(props.initialRoomSettings.rounds);\r\n  const [timer, setTimer] = useState(props.initialRoomSettings.timer);\r\n  const [isSpellcheck, setIsSpellcheck] = useState(props.initialRoomSettings.isSpellCheck);\r\n  const delayPassword = useRef(_.debounce(value => updatePassword(value), 500), []).current;\r\n\r\n  function onPasswordChanged(event) {\r\n    setPassword(event.target.value);\r\n    delayPassword(event.target.value);\r\n  }\r\n\r\n  function updateIsPrivate(event) {\r\n    setIsPrivate(event.target.checked);\r\n    props.updateRoom({ isPrivate: event.target.checked });\r\n  }\r\n\r\n  function updateRounds(event) {\r\n    setRounds(event.target.value);\r\n    props.updateRoom({rounds: event.target.value});\r\n  }\r\n\r\n  function updateTimer(event) {\r\n    setTimer(event.target.value);\r\n    props.updateRoom({timer: event.target.value});\r\n  }\r\n\r\n  function updateIsSpellCheck (event) {\r\n    setIsSpellcheck(event.target.checked);\r\n    props.updateRoom({ isSpellCheck: event.target.checked });\r\n  }\r\n\r\n  function updatePassword(value) {\r\n    props.updateRoom({password: value});\r\n  }\r\n\r\n  return (\r\n    <div className='CustomizeView-container'>\r\n      <IconButton style={{\r\n        maxWidth:\"150px\", \r\n        margin:\"8px 0 0 0\", \r\n        fontSize:\"15px\"}} \r\n        onClick={() => router.push('/')}><ArrowBackIcon />Back to Lobby</IconButton>\r\n      <h2>{`Room: ${props.roomId}`}</h2>\r\n\r\n      <div className='CustomizeView-form'>\r\n        <FormControlLabel\r\n            checked={isPrivate}\r\n            label=\"Private\"\r\n            control={<Switch />}\r\n            onChange={updateIsPrivate}\r\n            className=\"CustomizeView-switch\"\r\n        />\r\n\r\n        {isPrivate && <TextField label=\"Password\" placeholder=\"Enter a room password\" \r\n          variant=\"outlined\" InputLabelProps={{shrink: true}} size='small'\r\n          onChange={onPasswordChanged}\r\n          value={password}\r\n          style={{\r\n            marginTop: \"20px\"\r\n          }} />\r\n        }\r\n\r\n        <FormControl size='small' variant=\"outlined\" style={{marginTop: \"20px\", maxWidth:'70px'}}>\r\n          <InputLabel>Rounds</InputLabel>\r\n          <Select\r\n            native\r\n            label=\"Rounds\"\r\n            value={rounds}\r\n            onChange={updateRounds}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n            <option value={4}>4</option>\r\n            <option value={5}>5</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl size='small' variant=\"outlined\" style={{marginTop: \"20px\", maxWidth:'120px'}}>\r\n          <InputLabel>Drawing Timer</InputLabel>\r\n          <Select\r\n            native\r\n            value={timer}\r\n            label=\"Drawing Timer\"\r\n            onChange={updateTimer}\r\n          >\r\n            <option value={30}>30s</option>\r\n            <option value={45}>45s</option>\r\n            <option value={60}>1m</option>\r\n            <option value={90}>1m 30s</option>\r\n            <option value={120}>2m</option>\r\n            <option value={150}>2m 30s</option>\r\n            <option value={180}>3m</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControlLabel\r\n            style={{marginTop:\"20px\"}}\r\n            checked={isSpellcheck}\r\n            label=\"Allow Spellcheck\"\r\n            control={<Switch />}\r\n            onChange={updateIsSpellCheck}\r\n            className=\"CustomizeView-switch\"\r\n        />\r\n\r\n      </div>\r\n        \r\n      <Button variant=\"contained\" color=\"secondary\" onClick={props.startGame}\r\n        disableElevation style={{\r\n          borderRadius: 0,\r\n        }} disabled={!props.canStartGame}\r\n        className={classes.disabledButton}>    \r\n        {props.canStartGame ? \"Start Game\" : \"Waiting for more players\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomizeView;","export default __webpack_public_path__ + \"static/media/timerIcon.abd8979f.svg\";","export default __webpack_public_path__ + \"static/media/eraserIcon.da8256b8.svg\";","import { React, useEffect, useState, Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Clear, Lens, FormatColorFill, Palette, ClearAll } from '@material-ui/icons';\r\nimport eraser from '../../../assets/images/eraserIcon.svg';\r\n\r\nimport {\r\n    Popper,\r\n    Fade,\r\n    Paper,\r\n    SvgIcon,\r\n} from '@material-ui/core';\r\nimport  { CirclePicker } from 'react-color';\r\n\r\nconst LARGE_PEN_SIZE = 50;\r\nconst MEDIUM_PEN_SIZE = 25;\r\nconst SMALL_PEN_SIZE = 5;\r\nconst COLORS = [\"#000000\", \"#e91e63\", \"#9c27b0\", \"#673ab7\", \"#3f51b5\", \"#2196f3\", \"#03a9f4\", \"#00bcd4\", \"#009688\", \"#4caf50\", \r\n                \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#795548\", \"#607d8b\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    optionsContainer: {\r\n        // pointerEvents: 'none',\r\n        alignItems: 'flex-end',\r\n        bottom: '12px',\r\n        display: 'flex',\r\n        right: '2%',\r\n        position: 'absolute',\r\n    },\r\n    penSizeOptionsContainer: {\r\n        cursor: 'pointer',\r\n    },\r\n    penSizeOptions: {\r\n        padding: theme.spacing(2),\r\n        verticalAlign: 'baseline', \r\n        alignItems: 'flex-end',\r\n        display: 'flex',\r\n    },\r\n    penSize: {\r\n        cursor: 'pointer',\r\n        margin: theme.spacing(1),\r\n    },\r\n    colorOptionsContainer: {\r\n        cursor: 'pointer',\r\n\r\n    },\r\n    colorSizeOptions: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    clearOptionContainer: {\r\n        cursor: 'pointer',\r\n        top: '12px',\r\n        display: 'flex',\r\n        height: '20%',\r\n        left: '95%',\r\n        position: 'absolute',\r\n    },\r\n    eraserIcon: {\r\n        width: 24,\r\n        height: 24,\r\n        cursor: 'pointer',\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: theme.spacing(0.5),\r\n\r\n    }\r\n}));\r\n\r\nconst GameBoardOptions = (props) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openColorPopper, setOpenColorPopper] = useState(false);\r\n    const [openPenPopper, setOpenPenPopper] = useState(false);\r\n    const [menuContent, setMenuContent] = useState();\r\n\r\n    const {\r\n        penSize,\r\n        setPenSize,\r\n        activeColor,\r\n        setActiveColor,\r\n        clearBoard,\r\n        fillBoard,\r\n        penType,\r\n        setPenType,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n    }, [penSize, setPenSize, activeColor, setActiveColor]);\r\n\r\n    const handleClick = (option) => (event) => {\r\n        setMenuContent(option)\r\n        setAnchorEl(event.currentTarget);\r\n        if (option === 'pen') {\r\n            setOpenPenPopper(!openPenPopper);\r\n            setOpenColorPopper(false);\r\n        } else {\r\n            setOpenColorPopper(!openColorPopper);\r\n            setOpenPenPopper(false);\r\n        }\r\n    };\r\n\r\n    const handleColorChangeComplete = (color) => {\r\n        setActiveColor(color.hex)\r\n      };\r\n\r\n    const handlePenOptionClick = (optionType) => {\r\n        switch(optionType) {\r\n            case 'small': {\r\n                setPenType('pen');\r\n                setPenSize(SMALL_PEN_SIZE);\r\n                break;\r\n            }\r\n            case 'default': {\r\n                setPenType('pen');\r\n                setPenSize(MEDIUM_PEN_SIZE);\r\n                break;\r\n            }\r\n            case 'large': {\r\n                setPenType('pen');\r\n                setPenSize(LARGE_PEN_SIZE);\r\n                break;\r\n            }\r\n            case 'fill': {\r\n                setPenType('fill')\r\n                break;\r\n            }\r\n            case 'erase': {\r\n                setPenType('eraser');\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPenOptionsIcon = () => {\r\n        switch(penType) {\r\n            case 'pen': {\r\n                return (<Lens color='secondary' fontSize={`${penSize === SMALL_PEN_SIZE ? 'small' : penSize === MEDIUM_PEN_SIZE ? 'default' : 'large'}`}/>);\r\n            }\r\n            case 'fill': {\r\n                return (<FormatColorFill color='secondary' fontSize='large' />);\r\n            }\r\n            case 'eraser': {\r\n                return (\r\n                    <SvgIcon className={classes.eraserIcon} color='secondary' fontSize='large'>\r\n                        <path d=\"M28.7,8.9l-5.7-5.7c-1.1-1.1-3.1-1.1-4.2,0l-7.1,7.1c0,0,0,0,0,0s0,0,0,0l-7.5,7.5c-1.2,1.2-1.2,3.1,0,4.2l3.8,3.8\r\n                                c0.2,0.2,0.4,0.3,0.7,0.3h6.6c0.3,0,0.5-0.1,0.7-0.3l12.7-12.7c0,0,0,0,0,0C29.9,12,29.9,10.1,28.7,8.9z M14.9,24.1H9.2l-3.5-3.5\r\n                                c-0.4-0.4-0.4-1,0-1.4l6.8-6.8l7.1,7.1L14.9,24.1z\"/>\r\n                        <path d=\"M27,28H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h22c0.6,0,1-0.4,1-1S27.6,28,27,28z\"/>\r\n                    </SvgIcon>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getMenuContent = () => {\r\n        switch(menuContent){\r\n            case 'pen': {\r\n                return (\r\n                    <div className={classes.penSizeOptions}>\r\n                        <Lens className={classes.penSize} color='secondary' fontSize='small' onClick={() =>  handlePenOptionClick('small')}/>\r\n                        <Lens className={classes.penSize} color='secondary' fontSize='default' onClick={() => handlePenOptionClick('default')}/>\r\n                        <Lens className={classes.penSize} color='secondary' fontSize='large' onClick={() => handlePenOptionClick('large')}/>\r\n                        <FormatColorFill className={classes.penSize} color='secondary' fontSize='large' onClick={() => handlePenOptionClick('fill')}/>\r\n                        <SvgIcon className={classes.penSize} color='secondary' fontSize='default' onClick={() => handlePenOptionClick('erase')}>\r\n                            <path d=\"M28.7,8.9l-5.7-5.7c-1.1-1.1-3.1-1.1-4.2,0l-7.1,7.1c0,0,0,0,0,0s0,0,0,0l-7.5,7.5c-1.2,1.2-1.2,3.1,0,4.2l3.8,3.8\r\n                                c0.2,0.2,0.4,0.3,0.7,0.3h6.6c0.3,0,0.5-0.1,0.7-0.3l12.7-12.7c0,0,0,0,0,0C29.9,12,29.9,10.1,28.7,8.9z M14.9,24.1H9.2l-3.5-3.5\r\n                                c-0.4-0.4-0.4-1,0-1.4l6.8-6.8l7.1,7.1L14.9,24.1z\"/>\r\n                            <path d=\"M27,28H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h22c0.6,0,1-0.4,1-1S27.6,28,27,28z\"/>\r\n                        </SvgIcon>\r\n                    </div>\r\n                )\r\n            }\r\n            case 'color': {\r\n                return (\r\n                    <div className={classes.colorSizeOptions}>\r\n                        <CirclePicker\r\n                            onChangeComplete={handleColorChangeComplete}\r\n                            color={activeColor}\r\n                            colors={COLORS} \r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return ''\r\n            }\r\n        }\r\n    }\r\n\r\n    const closePopper = () => {\r\n        setOpenPenPopper(false);\r\n        setOpenColorPopper(false);\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n        <div className={classes.optionsContainer} >\r\n            <Popper open={openPenPopper || openColorPopper} anchorEl={anchorEl} placement='top' transition onMouseLeave={() => closePopper()}>\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                        <Paper>\r\n                            {getMenuContent()}\r\n                        </Paper>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n            <div className={classes.penSizeOptionsContainer} onClick={handleClick('pen')}>\r\n                {getPenOptionsIcon()}\r\n            </div>\r\n            <div className={classes.colorOptionsContainer} onClick={handleClick('color')}>\r\n                <Palette color='secondary' fontSize='large'/>\r\n            </div>\r\n            <div className={classes.colorOptionsContainer} onClick={() => clearBoard(true)}>\r\n                <Clear color='secondary' fontSize='large' />\r\n            </div>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GameBoardOptions;","import { React, useRef, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport  GameBoardOptions  from './GameBoardOptions.js'\r\nimport _ from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gameBoard: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '20px 0 40px 0',\r\n        flex: '1',\r\n    },\r\n    gameBoardCanvas: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        boxShadow: '10px 10px 0 0 rgba(0,0,0, .2)',\r\n        userSelect: 'none',\r\n        '-webkit-tap-highlight-color': 'rgba(0, 0, 0, 0)',\r\n        '-webkitUserDrag': 'none',\r\n        cursor: 'none',\r\n        width: '100%',\r\n    },\r\n    gameBoardBottom: {\r\n        backgroundColor: '#999',\r\n        borderRadius: '0 0 12px 12px',\r\n        bottom: '0',\r\n        height: '12px',\r\n        left: '-20px',\r\n        position: 'absolute',\r\n        width: 'calc(100% + 40px)',\r\n    },\r\n}));\r\n\r\nconst GameBoard = ({socket, setDisplayPen, isYourTurn}) => {\r\n    const canvasRef = useRef(null);\r\n    const [activeColor, setActiveColor] = useState('#000000');\r\n    const [penSize, setPenSize] = useState(25);\r\n    const [penType, setPenType] = useState('pen');\r\n    const [isClearingBoard, setisClearingBoard,] = useState(false);\r\n\r\n    let context;\r\n    let isDrawing = false;\r\n    let testTime = 0;\r\n    const current = {\r\n        color: 'black'\r\n    };\r\n    let noDrawingEvents = true;\r\n\r\n    const queue = {\r\n        items: [],\r\n    \r\n        enqueue: function(item) {\r\n            this.items.push(item);                \r\n        },\r\n    \r\n        dequeue: function() {\r\n            return this.items.shift();                                                \r\n        },\r\n    \r\n        peek: function(){\r\n            return this.items[0];                  \r\n        },\r\n    };\r\n    \r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', onResize, false);\r\n        onResize();\r\n\r\n        if (socket) {\r\n            socket.on('drawing', data => {\r\n                onDrawingEvent(data);\r\n\r\n                if (noDrawingEvents) {\r\n                    setTimeout(() => readFromQueue(false), 500);\r\n                    noDrawingEvents = false;\r\n                }\r\n            });\r\n\r\n            socket.on('clear board', data => {\r\n                onDrawingEvent(data);\r\n\r\n                if (noDrawingEvents) {\r\n                    setTimeout(() => readFromQueue(false), 500);\r\n                    noDrawingEvents = false;\r\n                }\r\n            });\r\n\r\n            socket.on('fill board', data => {\r\n                onDrawingEvent(data);\r\n\r\n                if (noDrawingEvents) {\r\n                    setTimeout(() => readFromQueue(false), 500);\r\n                    noDrawingEvents = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', onResize, false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        context = canvas.getContext('2d');\r\n        if (isYourTurn) {\r\n            canvas.addEventListener('mousedown', onMouseDown, false);\r\n            canvas.addEventListener('mouseup', onMouseUp, false);\r\n            canvas.addEventListener('mouseout', onMouseUp, false);\r\n            canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\r\n        \r\n            canvas.addEventListener('touchstart', onMouseDown, false);\r\n            canvas.addEventListener('touchend', onMouseUp, false);\r\n            canvas.addEventListener('touchcancel', onMouseUp, false);\r\n            canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\r\n        }\r\n\r\n        // prevent memory leaks\r\n        return () => {\r\n            if (isYourTurn) {           \r\n                canvas.removeEventListener('mousedown', onMouseDown, false);\r\n                canvas.removeEventListener('mouseup', onMouseUp, false);\r\n                canvas.removeEventListener('mouseout', onMouseUp, false);\r\n                canvas.removeEventListener('mousemove', throttle(onMouseMove, 5), false);\r\n            \r\n                canvas.removeEventListener('touchstart', onMouseDown, false);\r\n                canvas.removeEventListener('touchend', onMouseUp, false);\r\n                canvas.removeEventListener('touchcancel', onMouseUp, false);\r\n                canvas.removeEventListener('touchmove', onMouseMove, false);\r\n            }\r\n        }\r\n    }, [penSize, setPenSize, activeColor, setActiveColor, penType, setPenType, isYourTurn]);\r\n\r\n    function readFromQueue(waitTime) {\r\n        let item = queue.dequeue();\r\n        if (item !== undefined) {\r\n            drawFromEvent(item);\r\n\r\n            if (waitTime)\r\n                setTimeout(() => readFromQueue(true), item.time);\r\n            else\r\n                readFromQueue(true);\r\n        }\r\n        else {\r\n            noDrawingEvents = true;\r\n        }\r\n    }\r\n\r\n    const fillBoard = (emit, color) => {\r\n        const canvas = canvasRef.current;\r\n        const w = canvas.width;\r\n        const h = canvas.height;\r\n        \r\n        context = canvas.getContext('2d');\r\n        context.beginPath();\r\n        context.rect(0, 0, w, h);\r\n        context.fillStyle = color ? color : activeColor;\r\n        context.fill();\r\n\r\n        if (!emit || !socket) return;\r\n        socket.emit('fill', activeColor);\r\n    }\r\n\r\n    const clearBoard = (emit) => {\r\n        const canvas = canvasRef.current;\r\n        const w = canvas.width;\r\n        const h = canvas.height;\r\n\r\n        context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, w, h);\r\n\r\n        if (!emit || !socket) return;\r\n        socket.emit('clear');\r\n    }\r\n\r\n    const drawLine = (x0, y0, x1, y1, color, size, emit) => {\r\n        if (penType === 'fill') {\r\n            fillBoard(emit, color)\r\n            return;\r\n        }\r\n        const penColor = penType === 'eraser' ? '#FFFFFF' : color;\r\n        const canvas = canvasRef.current;\r\n        const w = canvas.width;\r\n        const h = canvas.height;\r\n\r\n        context.beginPath();\r\n        context.moveTo(x0, y0);\r\n        context.lineTo(x1, y1);\r\n        context.strokeStyle = penColor;\r\n        context.lineWidth = size;\r\n        context.lineCap = 'round';\r\n        context.stroke();\r\n  \r\n        if (!emit || !socket) return;\r\n\r\n        let difference;\r\n        if (testTime === 0) {\r\n            difference = 0;\r\n            testTime = new Date().getTime();\r\n        }\r\n        else {\r\n            let time = new Date().getTime();\r\n            difference = time - testTime;\r\n            testTime = time;\r\n        }\r\n        \r\n        socket.emit('drawing1', {\r\n            x0: x0 / w,\r\n            y0: y0 / h,\r\n            x1: x1 / w,\r\n            y1: y1 / h,\r\n            penColor,\r\n            size,\r\n            time: difference\r\n        });\r\n        \r\n    };\r\n\r\n    const getXCord = (evt) => {\r\n        const canvas = canvasRef.current;\r\n        let rect = canvas.getBoundingClientRect();\r\n        let x = _.get(evt, 'clientX') || _.get(evt, 'touches[0].clientX');\r\n        return (x - rect.left) / (rect.right - rect.left) * canvas.width\r\n    }\r\n\r\n    const getYCord = (evt) => {\r\n        const canvas = canvasRef.current;\r\n        let rect = canvas.getBoundingClientRect();\r\n        let y = _.get(evt, 'clientY') || _.get(evt, 'touches[0].clientY');\r\n        return (y - rect.top) / (rect.bottom - rect.top) * canvas.height\r\n    }\r\n\r\n    const onMouseDown = (e) => {\r\n        isDrawing = true;\r\n        current.X = getXCord(e);\r\n        current.Y = getYCord(e);\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n        drawLine(current.X, current.Y, getXCord(e), getYCord(e), activeColor, penSize, true);\r\n        current.X = getXCord(e);\r\n        current.Y = getYCord(e);\r\n    };\r\n\r\n    const onMouseUp = (e) => {\r\n        if (!isDrawing || e === undefined) {\r\n            return;\r\n        }\r\n        isDrawing = false;\r\n        drawLine(current.X, current.Y, getXCord(e), getYCord(e), activeColor, penSize, true);\r\n    };\r\n\r\n    const throttle = (callback, delay) => {\r\n        let previousCall = new Date().getTime();\r\n        return function() {\r\n            const time = new Date().getTime();\r\n            if ((time - previousCall) >= delay) {\r\n                previousCall = time;\r\n                callback.apply(null, arguments);\r\n            }\r\n        };\r\n    };\r\n\r\n    const onResize = () => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            const parentEl = document.getElementById('gameBoard');\r\n            canvas.width = parentEl && parentEl.clientWidth;\r\n            canvas.height = parentEl && parentEl.clientHeight;\r\n        }\r\n    };\r\n\r\n    const onDrawingEvent = (data) => {\r\n        queue.enqueue(data);\r\n    }\r\n\r\n    const drawFromEvent = (data) => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas !== null) {\r\n\r\n            switch(data.eventType) {\r\n                case 'clear board': {\r\n                    clearBoard(false);\r\n                    break;\r\n                }\r\n                case 'fill board': {\r\n                    fillBoard(false, data.color);\r\n                    break\r\n                }\r\n                default: {\r\n                    const w = canvas.width;\r\n                    const h = canvas.height;\r\n                    drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.penColor, data.size, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.gameBoard} id=\"gameBoard\" onMouseOut={() => setDisplayPen(false)} onMouseOver={() => setDisplayPen(true)}>\r\n            <canvas ref={canvasRef} className={classes.gameBoardCanvas}/>\r\n            <div className={classes.gameBoardBottom}></div>\r\n            <GameBoardOptions \r\n                penSize={penSize}\r\n                setPenSize={setPenSize}\r\n                activeColor={activeColor}\r\n                setActiveColor={setActiveColor}\r\n                fillBoard={fillBoard}\r\n                clearBoard={clearBoard}\r\n                penType={penType} \r\n                setPenType={setPenType}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatMessageContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginTop: '5px',\r\n  },\r\n  name: {\r\n    fontWeight: '600',\r\n    fontSize: '15 px',\r\n    textAlign: 'left',\r\n  },\r\n  text: {\r\n    marginLeft: '10px',\r\n    fontWeight: '400',\r\n    fontSize: '15px'\r\n  },\r\n  correct: {\r\n    fontWeight: '600',\r\n    fontSize: '15 px',\r\n    color: \"#02DB02\",\r\n  }\r\n \r\n}));\r\n\r\nfunction ChatMessage({name, text, isCorrect}) {\r\n  const classes = useStyles();\r\n\r\n  if (!isCorrect) {\r\n    return (\r\n        <div className={classes.chatMessageContainer}>\r\n          <h4 className={classes.name}>{`${name}:`}</h4>\r\n          <h4 className={classes.text}>{text}</h4>\r\n        </div>\r\n      );\r\n  }\r\n  else {\r\n    return (\r\n      <div className={classes.chatMessageContainer}>\r\n          <h4 className={classes.correct}>{`${name} guessed correctly`}</h4>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n    \r\nexport default ChatMessage;\r\n    ","import React, {useState, useEffect } from 'react';\r\nimport { \r\n    Paper,\r\n    TextField,\r\n    Popper,\r\n    Fade,\r\n    Chip,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChatMessage from './ChatMessage';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      chatContainer: {\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        boxShadow: '10px 10px 0 0 rgba(0,0,0, .2)',\r\n      },\r\n      chatOutputContainer: {\r\n        overflowY: 'auto',\r\n        flex: '1',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'column',\r\n        paddingRight: theme.spacing(1.5),\r\n        paddingLeft: theme.spacing(1.5),\r\n      },\r\n      chatInputContainer: {\r\n        padding: theme.spacing(1.5),\r\n        height: 'auto',\r\n      },\r\n      chatHeader: {\r\n        margin: 'auto',\r\n        padding: '10px 0 5px 0',\r\n        fontWeight: '400',\r\n        fontSize: '20px'\r\n      },\r\n      wordOptions: {\r\n        padding: theme.spacing(1),\r\n        verticalAlign: 'baseline', \r\n        alignItems: 'flex-end',\r\n        display: 'flex',\r\n    },\r\n    word: {\r\n      cursor: 'pointer',\r\n  },\r\n  }));\r\n\r\nfunction ChatContainer({\r\n    onNewWord,\r\n    words,\r\n    isYourTurn, \r\n    isSpellCheck,\r\n    onKeyDown,\r\n    setMissSpelledWords,\r\n    missSpelledWords,\r\n    suggetions,\r\n  }) {\r\n\r\n  const [word, setWord] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openPopper, setOpenPopper] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (_.get(missSpelledWords, 'length') > 0) {\r\n      setOpenPopper(true);\r\n    }\r\n  }, [missSpelledWords, word]);\r\n\r\n\r\n  function handleKeyPressed(e) {\r\n    setAnchorEl(e.currentTarget);\r\n\r\n    if (e.key === 'Enter'){\r\n      setWord(\"\");\r\n      onNewWord(word.trim().toLowerCase());\r\n    }\r\n  }\r\n\r\n  const handleOnChange = (v) => {\r\n    if (isSpellCheck) {\r\n      onKeyDown(v.target.value)\r\n    }\r\n    setWord(v.target.value)\r\n  }\r\n\r\n  const handleSuggestionClick = (newWord) => {\r\n    setWord(_.replace(word, _.get(missSpelledWords, '[0]'), newWord))\r\n    setMissSpelledWords([]);\r\n  }\r\n\r\n  const closePopper = () => {\r\n    setOpenPopper(false);\r\n  }\r\n\r\n  const getMenuContent = () => {\r\n    if ((_.get(missSpelledWords, 'length') > 0) && _.get(suggetions, '[0].length') > 0) {\r\n      return (\r\n        <div className={classes.wordOptions}>\r\n          {suggetions[0].map((newWord, index) => (index < 3) && <Chip onClick={() => handleSuggestionClick(newWord)} className={classes.word} label={newWord} color=\"secondary\"/>)}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.chatContainer}>\r\n        <Popper open={openPopper} anchorEl={anchorEl} placement='top' transition onMouseLeave={() => closePopper()}>\r\n            {({ TransitionProps }) => (\r\n                <Fade {...TransitionProps} timeout={350}>\r\n                    <Paper>\r\n                        {getMenuContent()}\r\n                    </Paper>\r\n                </Fade>\r\n            )}\r\n        </Popper>\r\n        <h2 className={classes.chatHeader}>Guesses</h2>\r\n        <div className={classes.chatOutputContainer}>\r\n          { words !== undefined && \r\n            words.map((word, index) => <ChatMessage key={index} isCorrect={word.isCorrect} name={word.name} text={word.word}/>)\r\n          }\r\n        </div>\r\n        <div className={classes.chatInputContainer}>\r\n          { !isYourTurn && \r\n              <TextField value={word} onKeyDown={handleKeyPressed} \r\n                onChange={v => handleOnChange(v)}\r\n                size='small' variant='filled' \r\n                fullWidth label=\"Type your guess...\"\r\n                error={_.get(missSpelledWords, 'length') > 0} \r\n              />\r\n            }\r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n    \r\nexport default ChatContainer;\r\n    ","export default __webpack_public_path__ + \"static/media/clock.1c1ca49f.svg\";","import { React } from 'react';\r\nimport clockImage from '../../../../assets/images/clock.svg';\r\nimport \"./Timer.css\";\r\n\r\nfunction Timer({time}) {\r\n    return (\r\n        <div className=\"Timer\">\r\n            <img className=\"Timer-image\" src={ clockImage } />\r\n            <h5 className=\"Timer-text\">{`${time}s`}</h5>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './GameOverModal.css';\r\nimport {Button} from '@material-ui/core';\r\nimport Emojis from '../../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction GameOverModal({isOpen, topUsers, handlePlayAgain}) {\r\n    const router = useHistory();\r\n\r\n    function createPodium(place, name, emojiId) {\r\n\r\n        let height;\r\n        let placeText;\r\n        let color;\r\n        switch (place) {\r\n            case 1:\r\n                height = \"90%\";\r\n                placeText=\"1st\";\r\n                color = \"#ffd700\";\r\n                break;\r\n            case 2:\r\n                height = \"70%\";\r\n                placeText = \"2nd\";\r\n                color = \"#C0C0C0\";\r\n                break;\r\n            case 3:\r\n                height = \"50%\";\r\n                placeText = \"3rd\";\r\n                color = \"#cd7f32\";\r\n                break;\r\n            default:\r\n                height = \"0%\";\r\n                placeText = \"\";\r\n                color=\"#ffffff\";\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div style={{height: height}} className=\"GameOverModal-place\">\r\n                <img src={Emojis[emojiId]}/>\r\n                <h4>{name}</h4>\r\n                <div className=\"GameOverModal-podium\" style={{backgroundColor: color}}></div>\r\n                <h3>{placeText}</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getPlaces(place) {\r\n        if (topUsers !== undefined) {\r\n            let user = topUsers.find(i => i.place === place);\r\n            if (user !== undefined) {\r\n                return createPodium(place, user.name, user.emojiId);\r\n            }\r\n        }\r\n    }\r\n\r\n    function goToHome() {\r\n        router.push('/');\r\n    }\r\n\r\n    return (\r\n        <Modal overlayClassName='GameOverModal-overlay' className='GameOverModal-content' isOpen={isOpen}>\r\n            <div className=\"GameOverModal-container\">\r\n                <h1>Game Over</h1>\r\n                <div className=\"GameOverModal-places\">\r\n                    {getPlaces(2)}\r\n                    {getPlaces(1)}\r\n                    {getPlaces(3)}\r\n                </div>\r\n                <div className=\"GameOverModal-buttons\">\r\n                    <Button onClick={goToHome} style={{width: '40%'}} variant=\"contained\">Leave</Button>\r\n                    <Button onClick={handlePlayAgain} style={{width: '40%'}} variant=\"contained\" color=\"secondary\">Play Again</Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n      );\r\n}\r\n\r\n\r\nexport default GameOverModal;","export default __webpack_public_path__ + \"static/media/correctWord.d7101710.mp3\";","export default __webpack_public_path__ + \"static/media/turnStart.74635a80.mp3\";","import { React, useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport pencil from '../../../assets/images/pencil.svg';\r\nimport timerIcon from '../../../assets/images/timerIcon.svg';\r\nimport GameBoard from './GameBoard.js'\r\nimport Chat from '../Components/ChatView/ChatContainer';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport Timer from './Timer/Timer';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport authenticationService from '../../../services/AuthenticationService';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport GameOverModal from '../Components/GameOverModal/GameOverModal';\r\nimport {Howl, Howler} from 'howler';\r\nimport correctWordSrc from '../../../assets/sounds/correctWord.mp3';\r\nimport turnStartSrc from '../../../assets/sounds/turnStart.mp3';\r\nimport _ from 'lodash';\r\n\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    gameBoardPen: {\r\n        backgroundImage: `url(${pencil})`,\r\n        backgroundPosition: 'center center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'contain',\r\n        top: '0',\r\n        left: '0',\r\n        position: 'absolute',\r\n        width: 50,\r\n        height: 50,\r\n        cursor: 'none',\r\n        pointerEvents: 'none',\r\n        zIndex:99999,\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    gridItem: {\r\n        height: '100%',\r\n    },\r\n    gridItemGame: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        flexDirection: 'column',\r\n    },\r\n    gameHeader: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        verticalAlign: 'center',\r\n        color: '#36363'\r\n    },\r\n    gameHeaderPaper: {\r\n        width: 'auto',\r\n        margin: 'auto',\r\n        boxShadow: '10px 10px 0 0 rgba(0,0,0, .2)',\r\n        padding: '10px',\r\n    },\r\n    wordPicker: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '0',\r\n        bottom: '40px',\r\n        width: '100%',\r\n        borderRadius: '5px',\r\n        background: ' rgba(0, 0, 0, 0.7)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n    wordGrid: {\r\n        marginTop: '10px',\r\n        display: 'grid',\r\n        gridGap: '8px',\r\n        gridTemplateColumns: '1fr 1fr 1fr'\r\n    },\r\n    wordHint: {\r\n        whiteSpace: 'break-spaces',\r\n    },\r\n    headerItems: {\r\n        margin: 'auto',\r\n    },\r\n}));\r\n\r\nconst Game = ({socket, handlePlayAgain, isSpellCheck}) => {\r\n    Howler.volume(0.8);\r\n    const gameBoardPenRef = useRef(null);\r\n    const classes = useStyles();\r\n    const router = useHistory();\r\n    const [displayPen, setDisplayPen] = useState(false);\r\n    const [words, setWords] = useState([]);\r\n    const [chooseWords, setChooseWords] = useState([]);\r\n    const [turnStarted, setTurnStarted] = useState(false);\r\n    const [isYourTurn, setIsYourTurn] = useState(false);\r\n    const [turnEnded, setTurnEnded] = useState(false);\r\n    const [correctWord, setCorrectWord] = useState(\"\");\r\n    const [timer, setTimer] = useState(0);\r\n    const [round, setRound] = useState(\"\");\r\n    const [wordHint, setWordHint] = useState(\"\");\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n    const [topUsers, setTopUsers] = useState([]);\r\n    const [missSpelledWords, setMissSpelledWords] = useState([]);\r\n    const [suggetions, setSuggetions] = useState({});\r\n    const turnEndedAnimation = useSpring({\r\n        opacity: turnEnded ? 1 : 0\r\n    });\r\n    const turnStartedAnimation = useSpring({\r\n        from: {opacity: !turnEnded ? 0 : 1},\r\n        to: {opacity: !turnEnded ? 1 : 0}\r\n    });\r\n    const correctWordSound = new Howl({src: correctWordSrc});\r\n    const turnStartSound = new Howl({src: turnStartSrc});\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket !== undefined) {\r\n            socket.on('new guess', handleNewGuess);\r\n\r\n            // your turn has started\r\n            socket.on('start your turn', words => {\r\n                setIsYourTurn(true);\r\n                setTurnEnded(false);\r\n                setTurnStarted(false);\r\n                setChooseWords(words);\r\n            });\r\n\r\n            // it is the userId's turn\r\n            socket.on('switch turns', data => {\r\n                let id = authenticationService.getId();\r\n                if (id !== data.userId) {\r\n                    setIsYourTurn(false);\r\n                    setTurnEnded(false);\r\n                    setTurnStarted(false);\r\n                }\r\n            });\r\n\r\n            // a new players turn started\r\n            socket.on('turn started', (data) => {\r\n                turnStartSound.play();\r\n                setWords([]);\r\n                setRound(`${data.round} of ${data.totalRounds}`);\r\n                setWordHint(data.wordHint.toUpperCase());\r\n                setTurnStarted(true);\r\n                setTurnEnded(false);\r\n            });\r\n\r\n            // timer updates\r\n            socket.on('timer', time => {\r\n                setTimer(time);\r\n            });\r\n\r\n            // turn ends\r\n            socket.on('turn end', data => {\r\n                handleTurnEnd(data.word);\r\n                setWordHint(\"\");\r\n                setTimer(0);\r\n            });\r\n\r\n            socket.on('game over', topUsers => {\r\n                handleGameOver(topUsers);\r\n            });\r\n\r\n            socket.on('word hint update', data => {\r\n                setWordHint(data.wordHint);\r\n            });\r\n\r\n            socket.on('spelling checked', data => {\r\n                setMissSpelledWords(data.missSpelledWords);\r\n                setSuggetions(data.suggestions);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n    }, [setDisplayPen, displayPen])\r\n    \r\n    function handleGameOver(topUsers) {\r\n        setTopUsers(topUsers);\r\n        setIsGameOver(true);\r\n    }\r\n\r\n    function handleNewGuess(data) {\r\n        if (data.isCorrect) \r\n            correctWordSound.play();\r\n        \r\n        let newWord = {name: data.name, word: data.word, isCorrect: data.isCorrect};\r\n        setWords(oldWords => [...oldWords, newWord]);\r\n    }\r\n\r\n    const onPenMove = (e) => {\r\n        gameBoardPenRef.current.style.left = `${e.pageX}px`;\r\n        gameBoardPenRef.current.style.top = `${e.pageY-50}px`;\r\n    }\r\n\r\n    const handleKeyDown = (word) => {\r\n        if (_.get(word, 'length') > 0) {\r\n            socket.emit('spell check', {\r\n                corpus: word,\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleSendWord(word) {\r\n        if (word !== undefined && word.length > 0) {\r\n            socket.emit('send word', {\r\n                word: word,\r\n                timeLeft: timer\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleWordSelection(word, difficulty) {\r\n        socket.emit('word selected', {\r\n            word: word,\r\n            difficulty: difficulty\r\n        });\r\n        setWordHint(word.toUpperCase());\r\n        setChooseWords([]);\r\n    }\r\n\r\n    function handleTurnEnd(word) {\r\n        setTurnEnded(true);\r\n        setCorrectWord(word.toUpperCase());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            {displayPen && <div ref={gameBoardPenRef} className={classes.gameBoardPen}></div>}\r\n            <Grid className={classes.gridContainer} container spacing={3} onMouseMove={(e) => displayPen && onPenMove(e)}>\r\n                <Grid className={classes.gridItemGame} item spacing={3} xs={10}>\r\n                    <div >\r\n                        <Paper className={classes.gameHeaderPaper}>\r\n                            <Grid container className={classes.gameHeader}>\r\n                                <Grid className={classes.headerItems} item xs={1} sm={3}>\r\n                                    <h2 style={{fontWeight: 500}}>{`Round: ${round}`}</h2>\r\n                                </Grid>\r\n                                <Grid className={classes.headerItems} item xs={1} sm={6}>\r\n                                    <h2 className={classes.wordHint}>{`${wordHint}`}</h2>\r\n                                </Grid>\r\n                                <Grid className={classes.headerItems} item xs={1} sm={3}>\r\n                                    <Timer time={timer}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </div>\r\n                    <div className={classes.game} >\r\n                        <GameBoard socket={socket} setDisplayPen={setDisplayPen} isYourTurn={isYourTurn}/>\r\n                        {!turnStarted && \r\n                            <animated.div style={turnStartedAnimation}>\r\n                                <div className={classes.wordPicker}>\r\n                                    <h1>{ isYourTurn ? \"Choose a word:\" : \"Waiting for player to choose a word...\"}</h1>\r\n                                    { isYourTurn && <div className={classes.wordGrid}>\r\n                                        {chooseWords && chooseWords.map((word, index) => {\r\n                                            return <Button key={index} onClick={() => handleWordSelection(word.word, word.difficulty)} \r\n                                                variant=\"contained\">{word.word}</Button>\r\n                                        })}\r\n                                    </div>}\r\n                                </div>\r\n                            </animated.div> \r\n                        }\r\n                        { turnEnded && \r\n                            <animated.div style={turnEndedAnimation}>\r\n                                <div className={classes.wordPicker}>\r\n                                    <h1>{\"Turn over\"}</h1>\r\n                                    <h2>\r\n                                        <span style={{fontWeight: 400}}>The Correct word was: </span>\r\n                                        {correctWord}\r\n                                    </h2>\r\n                                </div>\r\n                            </animated.div> \r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={classes.gridItem} item xs={2} >\r\n                    <Chat \r\n                        isYourTurn={isYourTurn} \r\n                        words={words} \r\n                        onNewWord={handleSendWord} \r\n                        isSpellCheck={isSpellCheck} \r\n                        onKeyDown={handleKeyDown}\r\n                        setMissSpelledWords={setMissSpelledWords}\r\n                        missSpelledWords={missSpelledWords}\r\n                        setSuggetions={setSuggetions}\r\n                        suggetions={suggetions}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        \r\n            <GameOverModal handlePlayAgain={handlePlayAgain} topUsers={topUsers} isOpen={isGameOver} />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from './Components/Game.js'\r\n\r\nfunction GameView(props) {\r\n    return <Game {...props}/>\r\n}\r\n\r\nexport default GameView;","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { IconButton, TextField, Button, Grid } from '@material-ui/core';\r\nimport './CreateLobbyModal.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CreateLobbyModal({isValidRoom, isPrivateRoom, isHost, validatePassword, errorMessage}) {\r\n\r\n  let showModal = !isValidRoom || (isPrivateRoom && !isHost);\r\n  const router = useHistory();\r\n  let password = useRef();\r\n\r\n  return (\r\n    <Modal overlayClassName='CreateLobbyModal-overlay' className='CreateLobbyModal-content' isOpen={showModal}>\r\n      <IconButton style={{\r\n        maxWidth:\"150px\",\r\n        padding: \"12px 0\", \r\n        fontSize:\"15px\"}} \r\n        onClick={() => router.push('/')}><ArrowBackIcon />Back to Lobby\r\n      </IconButton>\r\n\r\n      { isValidRoom ?\r\n        // if valid room, render password if needed\r\n        <div>\r\n          <h3>Enter the room password</h3>\r\n          <TextField label=\"Enter password\" placeholder=\"\" fullWidth={true} \r\n            variant=\"outlined\" InputLabelProps={{shrink: true}} size='small'\r\n            inputRef={password}            \r\n            style={{\r\n              marginTop: \"20px\"\r\n            }} \r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Button variant=\"contained\" color=\"secondary\" style={{\r\n                borderRadius: 0,\r\n                color: \"white\",\r\n                marginTop: \"20px\"\r\n              }}\r\n              onClick={() => validatePassword(password.current.value)}\r\n              >    \r\n                Join Game\r\n            </Button>\r\n          </Grid>\r\n        </div> :\r\n\r\n        // if not, room doesn't exist\r\n        <div className='CreateLobbyModal-error'>\r\n          <h1>{errorMessage}</h1>\r\n        </div>\r\n      }\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateLobbyModal;","import { React, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Close, Link } from '@material-ui/icons';\r\nimport { IconButton, TextField, Button } from '@material-ui/core';\r\nimport './InviteLinkModal.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nModal.setAppElement('#root');\r\nfunction InviteLinkModal({isOpen, setIsOpen}) {\r\n\r\n    function copyToClipboard() {\r\n        var tempInput = document.createElement(\"input\");\r\n        tempInput.value = window.location.href;\r\n        document.body.appendChild(tempInput);\r\n        tempInput.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(tempInput);\r\n\r\n        toast.info(\"Copied Link!\");\r\n    }\r\n    \r\n    return (\r\n        <Modal overlayClassName='InviteLinkModal-overlay' className='InviteLinkModal-content' isOpen={isOpen}\r\n            onRequestClose={() => setIsOpen(false)}>\r\n\r\n            <IconButton style={{\r\n                maxWidth:\"150px\",\r\n                padding: \"12px 0\", \r\n                fontSize:\"15px\"}} \r\n                onClick={() => setIsOpen(false)}><Close />\r\n            </IconButton>\r\n\r\n\r\n            <div>\r\n                <h3>Copy this link to invite friends!</h3>\r\n                <TextField label=\"Invite Link\" fullWidth={true} \r\n                variant=\"outlined\" InputLabelProps={{shrink: true}} size='small'\r\n                value={window.location.href}\r\n                disabled\r\n                style={{\r\n                    marginTop: \"20px\"\r\n                }} \r\n                />\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth={true} style={{\r\n                    borderRadius: 0,\r\n                    color: \"white\",\r\n                    marginTop: \"20px\",\r\n                    backgroundColor: \"#CE5BF7\",\r\n                }}\r\n                    onClick={copyToClipboard}>    \r\n                    <Link/> Copy Link\r\n                </Button>\r\n            </div>\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default InviteLinkModal;","import { React, useEffect, useState } from 'react';\r\nimport Background from '../../assets/images/Authpage_background.jpg';\r\nimport DoodleHeader from '../../components/DoodlerHeader.js'\r\nimport ParticipantView  from './Components/ParticipantView/ParticipantView';\r\nimport CustomizeView  from './Components/CustomizeView/CustomizeView';\r\nimport GameView from '../GameView/GameView.js';\r\nimport './CreateLobbyView.css';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../services/AuthenticationService';\r\nimport { useParams } from \"react-router-dom\";\r\nimport CreateLobbyModal from './Components/CreateLobbyModal/CreateLobbyModal';\r\nimport InviteLinkModal from './Components/InviteLinkModal/InviteLinkModal';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport io from 'socket.io-client';\r\nimport {\r\n  Grid,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Howl, Howler} from 'howler';\r\nimport joinedSoundSrc from '../../assets/sounds/userJoined.mp3';\r\nimport leftSoundSrc from '../../assets/sounds/userLeft.mp3';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: `url(${Background})`,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    height: 'auto',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '90%',\r\n    minHeight: '600px',\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  customizeViewGridItem: {\r\n    display: 'flex',\r\n    width: 'auto',\r\n    height: '80%',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 'auto',\r\n    }\r\n  },\r\n}));\r\n\r\ntoast.configure();\r\nlet socket;\r\n\r\nfunction CreateLobbyView() {\r\n  Howler.volume(0.8);\r\n  const classes = useStyles();\r\n\r\n  let { roomId } = useParams();\r\n  const [isHost, setIsHost] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isPrivateRoom, setIsPrivateRoom] = useState(false);\r\n  const [initialRoomSettings, setRoomSettings] = useState({});\r\n  const [isValidRoom, setIsValidRoom] = useState(true);\r\n  const [isInviteLinkOpen, setIsInviteLinkOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [hostId, setHostId] = useState(\"\");\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n  const [timer, setTimer] = useState(\"-\");\r\n  const [rounds, setRounds] = useState(\"-\");\r\n  const [isSpellCheck, setIsSpellCheck] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [drawingUserId, setDrawingUserId] = useState(\"\");\r\n  const [correctUserIds, setCorrectUserIds] = useState([]);\r\n  const [canStartGame, setCanStartGame] = useState(false);\r\n  const [scores, setScores] = useState([]);\r\n  const joinedSound = new Howl({src: joinedSoundSrc});\r\n  const leftSound = new Howl({src: leftSoundSrc});\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function GetRoomInformation() {\r\n      try {\r\n        const response = await Axios.get(`/room/find/${roomId}`, {\r\n          headers: {\r\n            token: authenticationService.getToken()\r\n          }\r\n        });\r\n        setIsHost(response.data.room.isHost);\r\n        setRoomSettings(response.data.room);\r\n        setIsPrivateRoom(response.data.room.isPrivate);\r\n        setIsValidRoom(true);\r\n        setUsers(response.data.room.users);\r\n        setHostId(response.data.room.hostId);\r\n        setTimer(response.data.room.timer);\r\n        setRounds(response.data.room.rounds);\r\n        setIsSpellCheck(response.data.room.isSpellCheck)\r\n        \r\n        if (response.data.room.isHost)\r\n          connectToRoom();\r\n        else if (!response.data.room.isPrivate)\r\n          connectToRoom();\r\n        \r\n      }\r\n      catch {\r\n        setIsValidRoom(false);\r\n        setErrorMessage(\"This room does not exist\");\r\n      }\r\n      finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    GetRoomInformation();\r\n\r\n    window.addEventListener(\"beforeunload\", handleRefresh);\r\n    \r\n    return () => { \r\n      window.removeEventListener(\"beforeunload\", handleRefresh);\r\n      if (socket) {\r\n        socket.disconnect();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCanStartGame(users.length > 1);\r\n  }, [users]);\r\n\r\n  function handleRefresh(e) {\r\n    var confirmationMessage = 'Your place will be reset, are you sure you want to refresh?';\r\n\r\n    (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n    return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n  }\r\n\r\n  async function updateRoom(updatedData) {\r\n    try {\r\n\r\n      if (updatedData.rounds !== undefined && socket !== undefined) {\r\n        socket.emit('update room settings', {rounds : updatedData.rounds});\r\n      }\r\n\r\n      if (updatedData.timer !== undefined && socket !== undefined) {\r\n        socket.emit('update room settings', {timer : updatedData.timer});\r\n      }\r\n\r\n      \r\n      if (updatedData.isSpellCheck !== undefined && socket !== undefined) {\r\n        socket.emit('update room settings', {isSpellCheck : updatedData.isSpellCheck});\r\n      }\r\n\r\n      await Axios.patch(`/room/${roomId}`, updatedData, {\r\n        headers: {\r\n          token: authenticationService.getToken()\r\n        }\r\n      });\r\n    }\r\n    catch (err){\r\n      toast.error(\"Error updaing values\")\r\n    }\r\n  }\r\n\r\n  async function validatePassword(password) {\r\n    try {\r\n      await Axios.post(`/room/join/${roomId}`, \r\n      {\r\n        password: password\r\n      }, \r\n      {\r\n        headers: {\r\n          token: authenticationService.getToken()\r\n        }\r\n      });\r\n      setIsPrivateRoom(false);\r\n      connectToRoom();\r\n    }\r\n    catch (err){\r\n      toast.error(\"Incorrect password\")\r\n\r\n    }\r\n  }\r\n\r\n  function handleInviteLink() {\r\n    setIsInviteLinkOpen(true);\r\n  }\r\n\r\n  function connectToRoom() {\r\n    socket = io({\r\n      query: {\r\n        token: authenticationService.getToken(),\r\n        roomId: roomId,\r\n      }\r\n    });\r\n\r\n    socket.on('force disconnect', () => {\r\n      disconnect();\r\n    });\r\n    socket.on('game in progress', (game) => {\r\n      goToGame();\r\n    });\r\n    socket.on('game start', () => {\r\n      setIsGameStarted(true);\r\n    });\r\n    socket.on('switch turns', data => {\r\n      setDrawingUserId(data.userId);\r\n    });\r\n    socket.on('correct guess', userId => {\r\n      setCorrectUserIds(oldIds => [...oldIds, userId]);\r\n    });\r\n    socket.on('user connected', (user) => {\r\n      userConnected(user);\r\n    });\r\n    socket.on('user disconnected', (userId) => {\r\n      userDisconnected(userId);\r\n    });\r\n    socket.on('new host', hostId => {\r\n      newHost(hostId);\r\n    });\r\n    socket.on('new room settings', (data) => {\r\n      if (data.timer !== undefined) {\r\n        setTimer(data.timer);\r\n      }\r\n      if (data.rounds !== undefined) {\r\n        setRounds(data.rounds);\r\n      }\r\n      if (data.isSpellCheck !== undefined) {\r\n        setIsSpellCheck(data.isSpellCheck);\r\n      }\r\n    });\r\n    socket.on('turn started', () => {\r\n      setCorrectUserIds([]);\r\n    });\r\n    socket.on('scores', scores => {\r\n      handleNewScores(scores);\r\n    });\r\n  }\r\n\r\n  function handleNewScores(scores) {\r\n    setScores(scores);\r\n  }\r\n\r\n  function goToGame() {\r\n    setIsGameStarted(true);\r\n  }\r\n\r\n  function userConnected(user) {\r\n    joinedSound.play();\r\n    setUsers(oldUsers => [...oldUsers, user]);\r\n  }\r\n\r\n  function userDisconnected(userId) {\r\n    leftSound.play();\r\n    setUsers(oldUsers => oldUsers.filter(i => i.id !== userId));\r\n  }\r\n\r\n  function newHost(hostId) {\r\n    setHostId(hostId);\r\n    if (hostId.toString() === authenticationService.getId() && !isHost) {\r\n      setIsHost(true);\r\n    }\r\n  }\r\n\r\n  function startGame() {\r\n    if (isHost && socket !== undefined) {\r\n      socket.emit('start game');\r\n    }\r\n  }\r\n\r\n  function disconnect() {\r\n    console.log('disconnected');\r\n    socket.disconnect();\r\n    setErrorMessage(\"The room is full\");\r\n    setIsValidRoom(false);\r\n  }\r\n\r\n  function resetGame() {\r\n    setIsGameStarted(false);\r\n  }\r\n\r\n  const createLobbyContent = () => (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container} maxWidth='md'>\r\n        <Grid className={classes.gridContainer} container spacing={3}>\r\n            <Grid item xs={12} className={classes.header}> \r\n              <DoodleHeader />\r\n            </Grid>\r\n            <Grid item xs={12} md={4} className={classes.customizeViewGridItem}> \r\n              <ParticipantView isGame={false} handleInviteLink={handleInviteLink} users={users} hostId={hostId}/>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} className={classes.customizeViewGridItem}>\r\n              { isLoading ? \r\n                    <div className=\"CreateLobbyView-waiting\">\r\n                        <h1>Loading...</h1>\r\n                    </div> :\r\n                    (isHost ?\r\n                      <CustomizeView canStartGame={canStartGame} className='' initialRoomSettings={initialRoomSettings} roomId={roomId} updateRoom={updateRoom} startGame={startGame}/> :\r\n                      <div className=\"CreateLobbyView-waiting\">\r\n                        <h1>Waiting for game to start...</h1>\r\n                        <h2>{`# of rounds: ${rounds} • Time each round: ${timer}s`}</h2>\r\n                      </div>)\r\n              }\r\n            </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <CreateLobbyModal \r\n        isValidRoom={isValidRoom} \r\n        errorMessage={errorMessage}\r\n        isHost={isHost} \r\n        isPrivateRoom={isPrivateRoom}\r\n        validatePassword={validatePassword}\r\n      />\r\n      <InviteLinkModal isOpen={isInviteLinkOpen} setIsOpen={setIsInviteLinkOpen}/>\r\n    </div>\r\n  )\r\n\r\n  const renderViewContent = () => {\r\n    if (!isGameStarted) {\r\n      return createLobbyContent();\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid className={classes.gridContainer} container spacing={3}>\r\n            <Grid item xs={12} className={classes.header}> \r\n              <DoodleHeader />\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.customizeViewGridItem}> \r\n              <ParticipantView isGame={true} scores={scores} correctUserIds={correctUserIds} drawingUserId={drawingUserId} handleInviteLink={handleInviteLink} users={users} hostId={hostId}/>\r\n            </Grid>\r\n            <Grid item xs={10} className={classes.customizeViewGridItem}>\r\n              {\r\n                <GameView\r\n                  roomId={roomId}\r\n                  socket={socket}\r\n                  handlePlayAgain={resetGame}\r\n                  isSpellCheck={isSpellCheck}\r\n                />\r\n              }\r\n            </Grid>\r\n        </Grid>\r\n        <CreateLobbyModal \r\n          isValidRoom={isValidRoom} \r\n          errorMessage={errorMessage}\r\n          isHost={isHost} \r\n          isPrivateRoom={isPrivateRoom}\r\n          validatePassword={validatePassword}\r\n        />\r\n        <InviteLinkModal isOpen={isInviteLinkOpen} setIsOpen={setIsInviteLinkOpen}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return renderViewContent();\r\n}\r\n\r\nexport default CreateLobbyView;","export default __webpack_public_path__ + \"static/media/userJoined.390ec013.mp3\";","export default __webpack_public_path__ + \"static/media/userLeft.4ed5c011.mp3\";","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport PrivateRoute from './components/PrivateRoute.js';\r\nimport AuthenticationView from './Views/AuthenticationView/AuthenticationView';\r\nimport HomeView from './Views/HomeView/HomeView';\r\nimport CreateLobbyView from './Views/CreateLobbyView/CreateLobbyView';\r\nimport GameView from './Views/GameView/GameView.js';\r\nimport axios from 'axios';\r\nimport packageJson from '../package.json';\r\n\r\naxios.defaults.baseURL = packageJson.proxy;\r\nfunction App() {\r\n  const isDev = false; // remove for production\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={AuthenticationView} />\r\n        {isDev ? <Route exact path=\"/\" component={HomeView} /> : <PrivateRoute exact path=\"/\" component={HomeView} />}\r\n        {isDev ? <Route exact path=\"/rooms/:roomId\" component={CreateLobbyView} /> : <PrivateRoute exact path=\"/rooms/:roomId\" component={CreateLobbyView} />}\r\n        {isDev ? <Route exact path=\"/game-view\" component={GameView} /> : <PrivateRoute exact path=\"/\" component={GameView} />}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}