{"version":3,"sources":["services/AuthenticationService.js","components/PrivateRoute.js","assets/images/Authpage_background.jpg","assets/images/logo.svg","Views/AuthenticationView/State/Views.js","Views/AuthenticationView/Components/LoginView/LoginView.js","Views/AuthenticationView/Components/StartView/StartView.js","Views/AuthenticationView/Components/DisplayIconPicker/DisplayIconPicker.js","assets/images/DisplayEmojis/DisplayEmojis.js","assets/images/DisplayEmojis/emoji1.svg","assets/images/DisplayEmojis/emoji2.svg","assets/images/DisplayEmojis/emoji3.svg","assets/images/DisplayEmojis/emoji4.svg","assets/images/DisplayEmojis/emoji5.svg","assets/images/DisplayEmojis/emoji6.svg","assets/images/DisplayEmojis/emoji7.svg","assets/images/DisplayEmojis/emoji8.svg","assets/images/DisplayEmojis/emoji9.svg","assets/images/DisplayEmojis/emoji10.svg","assets/images/DisplayEmojis/emoji11.svg","assets/images/DisplayEmojis/emoji12.svg","assets/images/DisplayEmojis/emoji13.svg","assets/images/DisplayEmojis/emoji14.svg","assets/images/DisplayEmojis/emoji15.svg","assets/images/DisplayEmojis/emoji16.svg","assets/images/DisplayEmojis/emoji17.svg","assets/images/DisplayEmojis/emoji18.svg","assets/images/DisplayEmojis/emoji19.svg","assets/images/DisplayEmojis/emoji20.svg","assets/images/DisplayEmojis/emoji21.svg","assets/images/DisplayEmojis/emoji22.svg","assets/images/DisplayEmojis/emoji23.svg","assets/images/DisplayEmojis/emoji24.svg","assets/images/DisplayEmojis/emoji25.svg","assets/images/DisplayEmojis/emoji26.svg","assets/images/DisplayEmojis/emoji27.svg","assets/images/DisplayEmojis/emoji28.svg","Views/AuthenticationView/Components/RegisterView/RegisterView.js","Views/AuthenticationView/AuthenticationView.js","components/DoodlerHeader.js","Views/HomeView/Components/Lobbies.js","Views/HomeView/Components/UserProfile.js","Views/HomeView/Components/Home.js","Views/HomeView/HomeView.js","assets/images/pencil.svg","Views/CreateLobbyView/Components/JoinedUser/JoinedUser.js","Views/CreateLobbyView/Components/ParticipantView/ParticipantView.js","Views/CreateLobbyView/Components/CustomizeView/CustomizeView.js","assets/images/eraserIcon.svg","Views/GameView/Components/GameBoardOptions.js","Views/GameView/Components/GameBoard.js","Views/GameView/Components/ChatView/ChatMessage.js","Views/GameView/Components/ChatView/ChatContainer.js","assets/images/clock.svg","Views/GameView/Components/Timer/Timer.js","Views/GameView/Components/GameOverModal/GameOverModal.js","assets/sounds/correctWord.mp3","assets/sounds/turnStart.mp3","Views/GameView/Components/Game.js","Views/GameView/GameView.js","Views/CreateLobbyView/Components/CreateLobbyModal/CreateLobbyModal.js","Views/CreateLobbyView/Components/InviteLinkModal/InviteLinkModal.js","Views/CreateLobbyView/CreateLobbyView.js","assets/sounds/userJoined.mp3","assets/sounds/userLeft.mp3","App.js","index.js"],"names":["tokenName","displayName","emojiName","isGuestName","idName","AuthenticationService","isAuthenticated","localStorage","getItem","verifyToken","Promise","resolve","reject","token","Axios","get","headers","then","catch","Error","logout","this","deleteToken","deleteDisplayName","deleteEmojiId","deleteIsGuest","deleteId","saveToken","setItem","removeItem","getToken","saveDisplayName","name","getDisplayName","saveEmojiId","id","getEmojiId","parseInt","saveIsGuest","value","getIsGuest","saveId","getId","PrivateRoute","Component","component","rest","render","props","authenticationService","to","pathname","state","from","location","Views","Start","Login","Register","Guest","toast","configure","LoginView","email","useRef","password","handleKeyPressed","e","a","key","handleLogin","post","current","response","data","user","emojiId","isGuest","handleRedirect","console","log","error","Grid","container","spacing","item","xs","IconButton","onClick","setView","className","alt","src","Logo","TextField","onKeyDown","inputRef","label","variant","fullWidth","type","StartView","style","width","DisplayIconPicker","newIndex","index","icons","length","setIndex","RegisterView","useState","emojiIndex","setEmojiIndex","handleRegister","undefined","justify","Emojis","AuthenticationView","renderedView","views","router","useHistory","push","backgroundImage","Background","Container","maxWidth","useStyles","makeStyles","theme","root","paper","padding","textAlign","color","palette","text","secondary","boxShadow","logo","minWidth","DoodleHeader","classes","sm","Paper","LobbyTableCell","withStyles","head","backgroundColor","primary","main","common","white","body","fontSize","TableCell","LobbyTableRow","action","hover","TableRow","tableContainer","maxHeight","overflowY","breakpoints","down","minHeight","widht","scroll","Lobbies","rooms","refresh","TableContainer","autoHide","Table","stickyHeader","aria-label","TableHead","align","TableBody","map","room","scope","Typography","isPrivate","isSpellCheck","userCount","Button","display","justifyContent","alignItems","flexGrow","gridContainer","height","displayIconEmoji","bigButton","logoutGrid","logoutButton","UserProfile","handleCreate","handleAutoJoin","handleLogout","setisGuest","setEmojiId","setDisplayName","useEffect","size","lobbies","grey","marginBottom","Home","setRooms","getAllRooms","roomId","userProfile","HomeView","JoinedUser","score","isHost","isVisible","isDrawing","isCorrect","visibility","pencil","ParticipantView","isGame","scores","handleInviteLink","users","hostId","drawingUserId","correctUserIds","getJoinedUsers","userList","i","find","found","s","disableElevation","borderRadius","disabledButton","CustomizeView","initialRoomSettings","setIsPrivate","setPassword","rounds","setRounds","timer","setTimer","isSpellcheck","setIsSpellcheck","delayPassword","_","debounce","updateRoom","updatePassword","margin","FormControlLabel","checked","control","Switch","onChange","event","target","placeholder","InputLabelProps","shrink","marginTop","FormControl","InputLabel","Select","native","startGame","disabled","canStartGame","COLORS","optionsContainer","bottom","right","position","penSizeOptionsContainer","cursor","penSizeOptions","verticalAlign","penSize","colorOptionsContainer","colorSizeOptions","clearOptionContainer","top","left","eraserIcon","marginRight","GameBoardOptions","anchorEl","setAnchorEl","openColorPopper","setOpenColorPopper","openPenPopper","setOpenPenPopper","menuContent","setMenuContent","setPenSize","activeColor","setActiveColor","clearBoard","penType","fillBoard","setPenType","handleClick","option","currentTarget","handleColorChangeComplete","hex","handlePenOptionClick","optionType","getMenuContent","Lens","FormatColorFill","SvgIcon","d","onChangeComplete","colors","Popper","open","placement","transition","onMouseLeave","TransitionProps","Fade","timeout","getPenOptionsIcon","Palette","Clear","gameBoard","flex","gameBoardCanvas","userSelect","gameBoardBottom","zIndex","GameBoard","context","socket","setDisplayPen","isYourTurn","handlePenSize","handlePenColor","canvasRef","testTime","noDrawingEvents","queue","items","enqueue","dequeue","shift","peek","readFromQueue","waitTime","drawFromEvent","setTimeout","time","window","addEventListener","onResize","on","onDrawingEvent","removeEventListener","canvas","getContext","onMouseDown","onMouseUp","throttle","onMouseMove","emit","w","h","beginPath","rect","fillStyle","fill","clearRect","drawLine","x0","y0","x1","y1","penColor","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","difference","Date","getTime","getXCord","evt","getBoundingClientRect","getYCord","X","Y","x","y","isNaN","callback","delay","previousCall","apply","arguments","parentEl","document","getElementById","clientWidth","clientHeight","eventType","onMouseOut","onMouseOver","ref","chatMessageContainer","flexDirection","fontWeight","marginLeft","correct","ChatMessage","chatContainer","overflow","chatOutputContainer","paddingRight","paddingLeft","chatInputContainer","chatHeader","wordOptions","word","ChatContainer","onNewWord","words","canType","setMissSpelledWords","missSpelledWords","suggetions","setWord","openPopper","setOpenPopper","newWord","Chip","replace","handleSuggestionClick","trim","toLowerCase","v","handleOnChange","Timer","clockImage","GameOverModal","isOpen","topUsers","handlePlayAgain","getPlaces","place","placeText","createPodium","overlayClassName","game","gameBoardPen","border","pointerEvents","gridItem","gridItemGame","gameHeader","gameHeaderPaper","wordPicker","background","wordGrid","gridGap","gridTemplateColumns","wordHint","whiteSpace","headerItems","Game","Howler","volume","gameBoardPenRef","displayPen","setWords","chooseWords","setChooseWords","turnStarted","setTurnStarted","setIsYourTurn","turnEnded","setTurnEnded","correctWord","setCorrectWord","round","setRound","setWordHint","isGameOver","setIsGameOver","setTopUsers","setSuggetions","turnEndedAnimation","useSpring","opacity","turnStartedAnimation","correctWordSound","Howl","correctWordSrc","turnStartSound","turnStartSrc","setPenColor","handleNewGuess","play","oldWords","userId","totalRounds","toUpperCase","handleGameOver","suggestions","md","lg","pageX","pageY","onPenMove","div","difficulty","handleWordSelection","timeLeft","corpus","GameView","Modal","setAppElement","CreateLobbyModal","isValidRoom","isPrivateRoom","validatePassword","errorMessage","showModal","InviteLinkModal","setIsOpen","onRequestClose","Close","href","tempInput","createElement","appendChild","select","execCommand","removeChild","info","Link","header","customizeViewGridItem","CreateLobbyView","useParams","setIsHost","isLoading","setIsLoading","setIsPrivateRoom","setRoomSettings","setIsValidRoom","isInviteLinkOpen","setIsInviteLinkOpen","setUsers","setHostId","isGameStarted","setIsGameStarted","setIsSpellCheck","setErrorMessage","setDrawingUserId","setCorrectUserIds","setCanStartGame","setScores","joinedSound","joinedSoundSrc","leftSound","leftSoundSrc","handleRefresh","confirmationMessage","returnValue","updatedData","patch","connectToRoom","io","query","disconnect","oldIds","oldUsers","userConnected","filter","userDisconnected","toString","newHost","handleNewScores","resetGame","GetRoomInformation","gameParticipantsViewGridItem","gameViewGridItem","axios","defaults","baseURL","packageJson","proxy","App","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3e45d8eb.chunk.js","sourcesContent":["\r\nimport Axios from 'axios';\r\n\r\nconst tokenName = 'token';\r\nconst displayName = 'displayName';\r\nconst emojiName = 'emojiId';\r\nconst isGuestName = 'isGuest';\r\nconst idName = 'id';\r\n\r\nconst AuthenticationService = {\r\n\r\n    isAuthenticated() {\r\n        return localStorage.getItem(tokenName);    \r\n    },\r\n\r\n    verifyToken: () => {\r\n        var promise = new Promise((resolve, reject) => {\r\n\r\n            let token = localStorage.getItem(tokenName);\r\n            if (!token) {\r\n                reject(Error(\"No token\"));\r\n                return;\r\n            }\r\n\r\n            Axios.get('/user/verify', {\r\n                headers: {\r\n                    'token': token\r\n                }\r\n            })\r\n            .then(() => {\r\n                resolve(\"Token is valid\")\r\n            })\r\n            .catch(() => {\r\n                reject(Error(\"Token is not valid\"))\r\n            })\r\n                \r\n        });\r\n        return promise;\r\n    },\r\n\r\n    logout: function() {\r\n        this.deleteToken();\r\n        this.deleteDisplayName();\r\n        this.deleteEmojiId();\r\n        this.deleteIsGuest();\r\n        this.deleteId();\r\n    },\r\n\r\n    // Token methods\r\n    saveToken(token){\r\n        localStorage.setItem(tokenName, token);\r\n    },\r\n\r\n    deleteToken() {\r\n        localStorage.removeItem(tokenName);\r\n    },\r\n\r\n    getToken() {\r\n        return localStorage.getItem(tokenName);\r\n    },\r\n\r\n    // User object methods\r\n    saveDisplayName(name) {\r\n        localStorage.setItem(displayName, name);\r\n    },\r\n\r\n    getDisplayName() {\r\n        return localStorage.getItem(displayName);\r\n    },\r\n\r\n    deleteDisplayName() {\r\n        localStorage.removeItem(displayName);\r\n    },\r\n\r\n    saveEmojiId(id) {\r\n        localStorage.setItem(emojiName, `${id}`);\r\n    },\r\n\r\n    getEmojiId() {\r\n        return parseInt(localStorage.getItem(emojiName));\r\n    },\r\n\r\n    deleteEmojiId() {\r\n        localStorage.removeItem(emojiName);\r\n    },\r\n\r\n    saveIsGuest(value) {\r\n        localStorage.setItem(isGuestName, `${value}`);\r\n    },\r\n\r\n    getIsGuest() {\r\n        return (localStorage.getItem(isGuestName) == 'true');\r\n    },\r\n\r\n    deleteIsGuest() {\r\n        localStorage.removeItem(isGuestName);\r\n    },\r\n\r\n    saveId(id) {\r\n        localStorage.setItem(idName, `${id}`);\r\n    },\r\n\r\n    getId() {\r\n        return localStorage.getItem(idName);\r\n    },\r\n\r\n    deleteId() {\r\n        localStorage.removeItem(idName);\r\n    },\r\n    \r\n};\r\n\r\nexport default AuthenticationService;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport authenticationService from '../services/AuthenticationService';\r\n\r\nfunction PrivateRoute ({ component: Component, ...rest }) {\r\n    \r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            authenticationService.isAuthenticated() ? \r\n                <Component {...props} />\r\n            : \r\n                <Redirect to={{pathname: \"/login\", state: { from: props.location}}} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","export default __webpack_public_path__ + \"static/media/Authpage_background.53c579d1.jpg\";","export default __webpack_public_path__ + \"static/media/logo.e9875a4f.svg\";","const Views = {\r\n    Start: 1,\r\n    Login: 2,\r\n    Register: 3,\r\n    Guest: 4\r\n};\r\n\r\nexport default Views;","import { React, useRef } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { IconButton, TextField, Grid } from '@material-ui/core';\r\nimport Logo from '../../../../assets/images/logo.svg';\r\nimport Views from '../../State/Views';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nfunction LoginView(props) {\r\n\r\n  const email = useRef();\r\n  const password = useRef();\r\n  \r\n  async function handleKeyPressed(e) {\r\n    if (e.key === 'Enter')\r\n      await handleLogin();\r\n  }\r\n\r\n  async function handleLogin() {\r\n\r\n    try {\r\n      const response = await Axios.post('/user/login', { \r\n        email: email.current.value,\r\n        password: password.current.value\r\n      });\r\n      \r\n      // login success\r\n      authenticationService.saveToken(response.data.token);\r\n      authenticationService.saveDisplayName(response.data.user.name);\r\n      authenticationService.saveEmojiId(response.data.user.emojiId);\r\n      authenticationService.saveIsGuest(response.data.user.isGuest);\r\n      authenticationService.saveId(response.data.user.id);\r\n\r\n      await authenticationService.verifyToken();\r\n      props.handleRedirect();     \r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Authentication error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <IconButton onClick={() => props.setView(Views.Start)}><ArrowBackIcon /></IconButton>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <img className=\"authentication-logo\" alt=\"Logo\" src={Logo}></img>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField onKeyDown={handleKeyPressed} inputRef={email} label=\"Email\" variant=\"outlined\" fullWidth type=\"email\"/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField onKeyDown={handleKeyPressed} inputRef={password} label=\"Password\" variant=\"outlined\" fullWidth type=\"password\"/>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <button onClick={handleLogin} className='login-button login-color'>Login</button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;","import React from 'react';\r\nimport './StartView.css';\r\nimport Logo from '../../../../assets/images/logo.svg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Views from '../../State/Views';\r\n\r\n\r\nfunction StartView(props) {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid className=\"logo-container\" item xs={12}>\r\n          <img style={{width: '80%'}} id=\"authentication-logo\" alt=\"Logo\" src={Logo}></img>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <button onClick={() => props.setView(Views.Login)} className='login-button login-color'>Login</button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <button onClick={() => props.setView(Views.Guest)} className='login-button guest-color'>Play As Guest</button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n            <h6 className=\"register-text\">Dont have an account? <span>\r\n                    <button onClick={() => props.setView(Views.Register)} className=\"register-button\">Register</button>\r\n                </span>\r\n            </h6>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartView;","import React from 'react';\r\nimport './DisplayIconPicker.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nfunction DisplayIconPicker(props) {\r\n\r\n    function increaseIndex() {\r\n        let newIndex = (props.index + 1) % props.icons.length;\r\n        props.setIndex(newIndex);\r\n    }\r\n\r\n    function decreaseIndex() {\r\n        let newIndex = (((props.index - 1) % props.icons.length) + props.icons.length) % props.icons.length;\r\n        props.setIndex(newIndex);\r\n    }\r\n\r\n    return (\r\n        <div className='displayiconpicker-container'>\r\n            <IconButton onClick={decreaseIndex}><ArrowBackIosIcon /></IconButton>\r\n            <img className=\"displayiconpicker-emoji\" alt=\"Logo\" src={props.icons[props.index]}></img>\r\n            <IconButton onClick={increaseIndex}><ArrowForwardIosIcon /></IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayIconPicker;","import e1 from './emoji1.svg';\r\nimport e2 from './emoji2.svg';\r\nimport e3 from './emoji3.svg';\r\nimport e4 from './emoji4.svg';\r\nimport e5 from './emoji5.svg';\r\nimport e6 from './emoji6.svg';\r\nimport e7 from './emoji7.svg';\r\nimport e8 from './emoji8.svg';\r\nimport e9 from './emoji9.svg';\r\nimport e10 from './emoji10.svg';\r\nimport e11 from './emoji11.svg';\r\nimport e12 from './emoji12.svg';\r\nimport e13 from './emoji13.svg';\r\nimport e14 from './emoji14.svg';\r\nimport e15 from './emoji15.svg';\r\nimport e16 from './emoji16.svg';\r\nimport e17 from './emoji17.svg';\r\nimport e18 from './emoji18.svg';\r\nimport e19 from './emoji19.svg';\r\nimport e20 from './emoji20.svg';\r\nimport e21 from './emoji21.svg';\r\nimport e22 from './emoji22.svg';\r\nimport e23 from './emoji23.svg';\r\nimport e24 from './emoji24.svg';\r\nimport e25 from './emoji25.svg';\r\nimport e26 from './emoji26.svg';\r\nimport e27 from './emoji27.svg';\r\nimport e28 from './emoji28.svg';\r\n\r\n\r\nexport default [\r\n    e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28\r\n];","export default __webpack_public_path__ + \"static/media/emoji1.dc74cf24.svg\";","export default __webpack_public_path__ + \"static/media/emoji2.a7358144.svg\";","export default __webpack_public_path__ + \"static/media/emoji3.a668302d.svg\";","export default __webpack_public_path__ + \"static/media/emoji4.cec52361.svg\";","export default __webpack_public_path__ + \"static/media/emoji5.16106a38.svg\";","export default __webpack_public_path__ + \"static/media/emoji6.fe03129a.svg\";","export default __webpack_public_path__ + \"static/media/emoji7.d778670d.svg\";","export default __webpack_public_path__ + \"static/media/emoji8.1af10857.svg\";","export default __webpack_public_path__ + \"static/media/emoji9.8af0409a.svg\";","export default __webpack_public_path__ + \"static/media/emoji10.c1d505dc.svg\";","export default __webpack_public_path__ + \"static/media/emoji11.8ef6e480.svg\";","export default __webpack_public_path__ + \"static/media/emoji12.8a6c3ed8.svg\";","export default __webpack_public_path__ + \"static/media/emoji13.e1f3a501.svg\";","export default __webpack_public_path__ + \"static/media/emoji14.377c2ec5.svg\";","export default __webpack_public_path__ + \"static/media/emoji15.039f7cc3.svg\";","export default __webpack_public_path__ + \"static/media/emoji16.54747372.svg\";","export default __webpack_public_path__ + \"static/media/emoji17.0f5ec1b1.svg\";","export default __webpack_public_path__ + \"static/media/emoji18.a1df4c65.svg\";","export default __webpack_public_path__ + \"static/media/emoji19.c34b03f5.svg\";","export default __webpack_public_path__ + \"static/media/emoji20.a59e0401.svg\";","export default __webpack_public_path__ + \"static/media/emoji21.44399be4.svg\";","export default __webpack_public_path__ + \"static/media/emoji22.e866e98f.svg\";","export default __webpack_public_path__ + \"static/media/emoji23.609141c1.svg\";","export default __webpack_public_path__ + \"static/media/emoji24.8a85d073.svg\";","export default __webpack_public_path__ + \"static/media/emoji25.c68f7ec5.svg\";","export default __webpack_public_path__ + \"static/media/emoji26.c2f458a8.svg\";","export default __webpack_public_path__ + \"static/media/emoji27.75267a83.svg\";","export default __webpack_public_path__ + \"static/media/emoji28.280c93fa.svg\";","import { React, useState, useRef } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { TextField, Grid, IconButton } from '@material-ui/core';\r\nimport Logo from '../../../../assets/images/logo.svg';\r\nimport Views from '../../State/Views';\r\nimport DisplayIconPicker from '../DisplayIconPicker/DisplayIconPicker';\r\nimport Emojis from '../../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nfunction RegisterView(props) {\r\n\r\n    const [emojiIndex, setEmojiIndex] = useState(0);\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const name = useRef();\r\n\r\n    async function handleKeyPressed(e) {\r\n        if (e.key === 'Enter')\r\n          await handleRegister();\r\n    }\r\n    \r\n    async function handleRegister() {\r\n\r\n        try {\r\n            const response = await Axios.post('/user/register', { \r\n                email: email.current ? email.current.value : undefined,\r\n                password: password.current ? password.current.value : undefined,\r\n                name: name.current ? name.current.value : \"\",\r\n                emojiId: emojiIndex,\r\n                isGuest: props.isGuest\r\n            });\r\n            \r\n            // register success\r\n            authenticationService.saveToken(response.data.token);\r\n            authenticationService.saveDisplayName(response.data.user.name);\r\n            authenticationService.saveEmojiId(response.data.user.emojiId);\r\n            authenticationService.saveIsGuest(response.data.user.isGuest);\r\n            authenticationService.saveId(response.data.user.id);\r\n\r\n            await authenticationService.verifyToken();\r\n            props.handleRedirect();     \r\n        }\r\n        catch (error) {\r\n            toast.error(\"Authentication error\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3} justify=\"center\">\r\n            <Grid item xs={12}>\r\n                <IconButton onClick={() => props.setView(Views.Start)}><ArrowBackIcon /></IconButton>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <img className=\"authentication-logo\" alt=\"Logo\" src={Logo}></img>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <DisplayIconPicker icons={Emojis} setIndex={setEmojiIndex} index={emojiIndex}/>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <TextField onKeyDown={handleKeyPressed} inputRef={name} label=\"Display Name\" variant=\"outlined\" fullWidth/>\r\n            </Grid>\r\n\r\n            { !props.isGuest &&\r\n                <Grid item xs={12}>\r\n                    <TextField onKeyDown={handleKeyPressed} inputRef={email} label=\"Email\" variant=\"outlined\" fullWidth type=\"email\"/>\r\n                </Grid>\r\n            }\r\n\r\n            { !props.isGuest &&\r\n                <Grid item xs={12}>\r\n                    <TextField onKeyDown={handleKeyPressed} inputRef={password} label=\"Password\" variant=\"outlined\" fullWidth type=\"password\"/>\r\n                </Grid>\r\n            }  \r\n            \r\n            <Grid item xs={12}>\r\n                <button onClick={handleRegister} className='login-button login-color'>{props.isGuest ? \"Play\" : \"Register\"}</button>\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterView;","import React, {useState} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './AuthenticationView.css';\r\nimport Background from '../../assets/images/Authpage_background.jpg';\r\nimport LoginView from './Components/LoginView/LoginView';\r\nimport StartView from './Components/StartView/StartView';\r\nimport RegisterView from './Components/RegisterView/RegisterView';\r\nimport Views from './State/Views';\r\n\r\nfunction AuthenticationView(props) {\r\n  \r\n  const [views, setView] = useState(Views.Start);\r\n  const router = useHistory();\r\n\r\n\r\n  let renderedView;\r\n  switch (views) {\r\n    case Views.Start:\r\n      renderedView = (<StartView setView={setView}/>);\r\n      break;\r\n    case Views.Login:\r\n      renderedView = (<LoginView setView={setView} handleRedirect={handleRedirect}/>)\r\n      break;\r\n    case Views.Register:\r\n      renderedView = (<RegisterView isGuest={false} setView={setView} handleRedirect={handleRedirect}/>);\r\n      break;\r\n    case Views.Guest:\r\n      renderedView = (<RegisterView isGuest={true} setView={setView} handleRedirect={handleRedirect}/>);\r\n      break;\r\n  }\r\n\r\n  function handleRedirect() {\r\n    if (props.location && props.location.state && props.location.from) {\r\n      router.push(props.location.state.from.pathname);\r\n    }\r\n    else{\r\n      router.push(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='authentication-view' style={{ backgroundImage: `url(${Background})` }}>\r\n        <Container className='authentication-container' maxWidth='sm'>\r\n          {renderedView}\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthenticationView;","import { React } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n} from '@material-ui/core';\r\nimport Logo from '../assets/images/logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // [theme.breakpoints.down('sm')]: {\r\n    //   height: '2vh',\r\n    // },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    boxShadow: '10px 10px 5px 0 rgba(0,0,0, .15)',\r\n  },\r\n  logo: {\r\n    width: '10%',\r\n    minWidth: '85px'\r\n  }\r\n}));\r\n\r\nconst DoodleHeader = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        xs,\r\n        sm,\r\n    } = props;\r\n\r\n    return (\r\n        <Grid item xs={xs ? xs : 12} sm={sm ? sm : 12}>\r\n            <Paper className={classes.paper}><img className={classes.logo} alt=\"Logo\" src={Logo}></img></Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default DoodleHeader;","import { React } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell, \r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Button,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst LobbyTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n  \r\nconst LobbyTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        maxHeight: '70vh',\r\n        overflowY: 'hidden',\r\n        [theme.breakpoints.down('sm')]: {\r\n          minHeight: '20vh',\r\n          minWidth: 150,\r\n          widht: 150,\r\n        },\r\n    },\r\n    scroll: {\r\n        minHeight: '69vh',\r\n        minWidth: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n          minHeight: '20vh',\r\n          minWidth: 150,\r\n          widht: 150,\r\n        },\r\n    }\r\n}));\r\n\r\nconst Lobbies = ({rooms, refresh}) => {\r\n    const classes = useStyles();\r\n    const router = useHistory();\r\n\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n       <Scrollbars autoHide className={classes.scroll}>\r\n        { (rooms) &&\r\n            <Table stickyHeader aria-label=\"lobby table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                <LobbyTableCell>Room #</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\">Status</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\">Spellcheck</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\">Players</LobbyTableCell>\r\n                <LobbyTableCell align=\"right\"><IconButton onClick={refresh} variant=\"contained\" style={{color: \"#ffffff\"}}><RefreshIcon/></IconButton></LobbyTableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            \r\n            <TableBody>\r\n                {rooms.map((room) => (\r\n                <LobbyTableRow key={room.id}>\r\n                    <LobbyTableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"h6\">{room.id}</Typography>\r\n                    </LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\"><Typography variant=\"h6\">{!room.isPrivate ? \"Open\" : \"Private\"}</Typography></LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\">{room.isSpellCheck ? <SpellcheckIcon color=\"secondary\"/> : ''}</LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\"><Typography variant=\"h6\">{ `${room.userCount}/8`}</Typography></LobbyTableCell>\r\n                    <LobbyTableCell align=\"right\"><Button onClick={() => router.push(`/rooms/${room.id}`)} variant=\"contained\" color=\"secondary\">JOIN</Button></LobbyTableCell>\r\n                </LobbyTableRow>\r\n                ))}\r\n            </TableBody>\r\n            </Table>\r\n        }\r\n        </Scrollbars>\r\n      </TableContainer>\r\n    );\r\n}\r\n\r\nexport default Lobbies;","import { React, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Emojis from '../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport authenticationService from '../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexGrow: 1,\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  displayIconEmoji: {\r\n    width: '33%',\r\n  },\r\n  bigButton: {\r\n      height: '100%',\r\n      width: '100%',\r\n  },\r\n  logoutGrid: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n  },\r\n  logoutButton: {\r\n      fontSize: '1rem',\r\n  }\r\n}));\r\n\r\nconst UserProfile = ({ handleCreate, handleAutoJoin, handleLogout }) => {\r\n    const classes = useStyles();\r\n\r\n    const [isGuest, setisGuest] = useState(false);\r\n    const [emojiId, setEmojiId] = useState(0);\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setDisplayName(authenticationService.getDisplayName());\r\n        setEmojiId(authenticationService.getEmojiId());\r\n        setisGuest(authenticationService.getIsGuest());\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid className={classes.gridContainer} container spacing={3}>\r\n                <Grid className={classes.logoutGrid} item xs={12}>\r\n                    <Button className={classes.logoutButton} color=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <div>\r\n                            <img className={classes.displayIconEmoji} alt=\"User Icon\" src={Emojis[emojiId]}></img>\r\n                            <Typography variant=\"h6\">{displayName}</Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Button onClick={handleAutoJoin} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">QUICK JOIN</Button>\r\n                </Grid>\r\n                { !isGuest &&\r\n                <Grid item xs={12} sm={12}>\r\n                    <Button onClick={handleCreate} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">CREAT LOBBY</Button>\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","import { React, useRef, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Background from '../../../assets/images/Authpage_background.jpg';\r\nimport DoodleHeader from '../../../components/DoodlerHeader.js'\r\nimport Lobbies from './Lobbies';\r\nimport UserProfile from './UserProfile';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../../services/AuthenticationService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: `url(${Background})`,\r\n    flexGrow: 1,\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  lobbies: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    height: '65vh',\r\n  },\r\n  userProfile: {\r\n    backgroundColor: theme.palette.grey[200],\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    height: '10vh',\r\n  },\r\n  logo: {\r\n    height: '30vh',\r\n  }\r\n}));\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n    const router = useHistory();\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n      getAllRooms();\r\n    }, []);\r\n\r\n    const getLoobbiesTableHeader = () => {\r\n        return `${rooms.length ? 'We found some games that you could join!' : 'No one is playing right now :( Start a game and invite your friends!'}`\r\n    }\r\n\r\n    function handleLogout() {\r\n      authenticationService.logout();\r\n      router.push('/login');\r\n    }\r\n\r\n    async function handleCreate() {\r\n        try {\r\n          const response = await Axios.post('/room/create', {}, {\r\n            headers: {\r\n              token: authenticationService.getToken()\r\n            }\r\n          });\r\n          router.push(`/rooms/${response.data.room.id}`);\r\n        }\r\n        catch {\r\n          toast.error(\"Error joining room\");\r\n        }  \r\n    }\r\n\r\n    async function getAllRooms() {\r\n      try {\r\n        const response = await Axios.get('/room/all', {\r\n          headers: {\r\n            token: authenticationService.getToken()\r\n          }\r\n        });\r\n        setRooms(response.data.rooms);\r\n      }\r\n      catch {}\r\n    }\r\n\r\n    async function handleAutoJoin() {\r\n      try {\r\n        const response = await Axios.get('/room/random', {\r\n          headers: {\r\n            token: authenticationService.getToken()\r\n          }\r\n        });\r\n\r\n        router.push(`/rooms/${response.data.roomId}`);\r\n      }\r\n      catch {\r\n        toast.error(\"No rooms found\");\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid className={classes.gridContainer} container spacing={3}>\r\n                    <DoodleHeader />\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper, classes.lobbies}>\r\n                        <Typography variant=\"h5\">{getLoobbiesTableHeader()}</Typography><br/>\r\n                        <Lobbies refresh={getAllRooms} rooms={rooms}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper className={classes.paper, classes.userProfile}><UserProfile handleLogout={handleLogout} handleAutoJoin={handleAutoJoin} handleCreate={handleCreate}/></Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from './Components/Home.js'\r\n\r\n\r\nfunction HomeView(props) {\r\n  return <Home />\r\n}\r\n\r\nexport default HomeView;","export default __webpack_public_path__ + \"static/media/pencil.09f288ec.svg\";","import React from 'react';\r\nimport './JoinedUser.css';\r\nimport Emojis from '../../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport pencil from '../../../../assets/images/pencil.svg';\r\n\r\nfunction JoinedUser({score, isHost, emojiId, name, isVisible, isDrawing, isCorrect}) {\r\n  return (\r\n    <div className={`JoinedUser-container ${isCorrect ? \"JoinedUser-Correct\" : \"JoinedUser-Regular\"}`}>\r\n        <img style={{visibility: isVisible ? \"visible\" : \"hidden\"}}\r\n          className=\"JoinedUser-icon\" alt=\"Username\" src={Emojis[emojiId]}></img>\r\n        <h3 style={{visibility: isVisible ? \"visible\" : \"hidden\"}}>{name}</h3>\r\n        {isHost && <StarIcon className='leader-icon' style={{ color: \"FFD700\" }}/>}\r\n        {isDrawing && <img className=\"JoinedUser-pencil\" src={pencil} />}\r\n        {score !== undefined && <h5>{`Score: ${score}`}</h5>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinedUser;","import React from 'react';\r\nimport './ParticipantView.css';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport JoinedUser from '../JoinedUser/JoinedUser';\r\nimport {\r\n  Grid,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nfunction ParticipantView({isGame, scores, handleInviteLink, users, hostId, drawingUserId, correctUserIds}) {\r\n\r\n  function getJoinedUsers() {\r\n    let userList = [];\r\n    if (users !== undefined) {\r\n\r\n      for (let i = 0; i < users.length; i++) {\r\n        let user = users[i];\r\n\r\n        //only add unique users\r\n        if (userList.find(i => i.id === user.id))\r\n          continue;\r\n\r\n        let isHost = user.id === hostId;\r\n        let isDrawing = user.id === drawingUserId;\r\n        let isCorrect = false;\r\n        if (correctUserIds && correctUserIds.find(i => i === user.id))\r\n          isCorrect = true;\r\n\r\n        let score = isGame ? 0 : undefined;\r\n        if (scores !== undefined) {\r\n          let found = scores.find(s => s.id === user.id);\r\n          if (found !== undefined && found !== null)\r\n            score = found.score;\r\n        }\r\n\r\n        userList.push(<JoinedUser \r\n          isCorrect={isCorrect} \r\n          isDrawing={isDrawing} \r\n          key={i} \r\n          isVisible={true} \r\n          score={score}\r\n          isHost={isHost} \r\n          emojiId={user.emojiId} \r\n          name={user.name}/>);\r\n      }\r\n    }\r\n\r\n    for (let i=userList.length; i < 8; i++) {\r\n      userList.push(<JoinedUser key={i} isVisible={false}/>);\r\n    }\r\n    return userList;\r\n  }\r\n\r\n  const renderContent = () => (\r\n    <Grid item xs={12} className='ParticipantView-container'>\r\n      <div className='ParticipantView'>\r\n        <div className='joined-container'>\r\n          <GroupIcon/>\r\n          <h4>{`${users.length}/8`}</h4>\r\n        </div>\r\n        <div className='participant-grid'>\r\n          {getJoinedUsers()}\r\n        </div>\r\n        <Button variant=\"contained\" disableElevation style={{\r\n          backgroundColor: \"#CE5BF7\",\r\n          borderRadius: 0,\r\n          color: \"white\"\r\n        }} onClick={handleInviteLink}>\r\n          Invite Link\r\n        </Button>\r\n      </div>\r\n    </Grid>\r\n  )\r\n\r\n  return renderContent()\r\n}\r\n\r\nexport default ParticipantView;","import React, { useState, useRef } from 'react';\r\nimport './CustomizeView.css';\r\nimport { Button, TextField, Switch, FormControlLabel, FormControl, Select, InputLabel, IconButton, \r\n  Grid, Typography } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport _ from \"lodash\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  disabledButton: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction CustomizeView(props) {\r\n  const classes = useStyles();\r\n  const router = useHistory();\r\n  const [isPrivate, setIsPrivate] = useState(props.initialRoomSettings.isPrivate);\r\n  const [password, setPassword] = useState(props.initialRoomSettings.password ? props.initialRoomSettings.password : \"\");\r\n  const [rounds, setRounds] = useState(props.initialRoomSettings.rounds);\r\n  const [timer, setTimer] = useState(props.initialRoomSettings.timer);\r\n  const [isSpellcheck, setIsSpellcheck] = useState(props.initialRoomSettings.isSpellCheck);\r\n  const delayPassword = useRef(_.debounce(value => updatePassword(value), 500), []).current;\r\n\r\n  function onPasswordChanged(event) {\r\n    setPassword(event.target.value);\r\n    delayPassword(event.target.value);\r\n  }\r\n\r\n  function updateIsPrivate(event) {\r\n    setIsPrivate(event.target.checked);\r\n    props.updateRoom({ isPrivate: event.target.checked });\r\n  }\r\n\r\n  function updateRounds(event) {\r\n    setRounds(event.target.value);\r\n    props.updateRoom({rounds: event.target.value});\r\n  }\r\n\r\n  function updateTimer(event) {\r\n    setTimer(event.target.value);\r\n    props.updateRoom({timer: event.target.value});\r\n  }\r\n\r\n  function updateIsSpellCheck (event) {\r\n    setIsSpellcheck(event.target.checked);\r\n    props.updateRoom({ isSpellCheck: event.target.checked });\r\n  }\r\n\r\n  function updatePassword(value) {\r\n    props.updateRoom({password: value});\r\n  }\r\n\r\n  return (\r\n    <div className='CustomizeView-container'>\r\n      <IconButton style={{\r\n        maxWidth:\"150px\", \r\n        margin:\"8px 0 0 0\", \r\n        fontSize:\"15px\"}} \r\n        onClick={() => router.push('/')}><ArrowBackIcon />Back to Lobby</IconButton>\r\n      <h2>{`Room: ${props.roomId}`}</h2>\r\n\r\n      <div className='CustomizeView-form'>\r\n        <FormControlLabel\r\n            checked={isPrivate}\r\n            label=\"Private\"\r\n            control={<Switch />}\r\n            onChange={updateIsPrivate}\r\n            className=\"CustomizeView-switch\"\r\n        />\r\n\r\n        {isPrivate && <TextField label=\"Password\" placeholder=\"Enter a room password\" \r\n          variant=\"outlined\" InputLabelProps={{shrink: true}} size='small'\r\n          onChange={onPasswordChanged}\r\n          value={password}\r\n          style={{\r\n            marginTop: \"20px\"\r\n          }} />\r\n        }\r\n\r\n        <FormControl size='small' variant=\"outlined\" style={{marginTop: \"20px\", maxWidth:'70px'}}>\r\n          <InputLabel>Rounds</InputLabel>\r\n          <Select\r\n            native\r\n            label=\"Rounds\"\r\n            value={rounds}\r\n            onChange={updateRounds}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n            <option value={4}>4</option>\r\n            <option value={5}>5</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl size='small' variant=\"outlined\" style={{marginTop: \"20px\", maxWidth:'120px'}}>\r\n          <InputLabel>Drawing Timer</InputLabel>\r\n          <Select\r\n            native\r\n            value={timer}\r\n            label=\"Drawing Timer\"\r\n            onChange={updateTimer}\r\n          >\r\n            <option value={30}>30s</option>\r\n            <option value={45}>45s</option>\r\n            <option value={60}>1m</option>\r\n            <option value={90}>1m 30s</option>\r\n            <option value={120}>2m</option>\r\n            <option value={150}>2m 30s</option>\r\n            <option value={180}>3m</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControlLabel\r\n            style={{marginTop:\"20px\"}}\r\n            checked={isSpellcheck}\r\n            label=\"Allow Spellcheck\"\r\n            control={<Switch />}\r\n            onChange={updateIsSpellCheck}\r\n            className=\"CustomizeView-switch\"\r\n        />\r\n\r\n      </div>\r\n        \r\n      <Button variant=\"contained\" color=\"secondary\" onClick={props.startGame}\r\n        disableElevation style={{\r\n          borderRadius: 0,\r\n        }} disabled={!props.canStartGame}\r\n        className={classes.disabledButton}>    \r\n        {props.canStartGame ? \"Start Game\" : \"Waiting for more players\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomizeView;","export default __webpack_public_path__ + \"static/media/eraserIcon.da8256b8.svg\";","import { React, useEffect, useState, Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Clear, Lens, FormatColorFill, Palette, ClearAll } from '@material-ui/icons';\r\nimport eraser from '../../../assets/images/eraserIcon.svg';\r\n\r\nimport {\r\n    Popper,\r\n    Fade,\r\n    Paper,\r\n    SvgIcon,\r\n} from '@material-ui/core';\r\nimport  { CirclePicker } from 'react-color';\r\n\r\nconst LARGE_PEN_SIZE = 30;\r\nconst MEDIUM_PEN_SIZE = 15;\r\nconst SMALL_PEN_SIZE = 5;\r\nconst COLORS = [\"#000000\", \"#e91e63\", \"#9c27b0\", \"#673ab7\", \"#3f51b5\", \"#2196f3\", \"#03a9f4\", \"#00bcd4\", \"#009688\", \"#4caf50\", \r\n                \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#795548\", \"#607d8b\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    optionsContainer: {\r\n        // pointerEvents: 'none',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between',\r\n        width: '120px',\r\n        bottom: '12px',\r\n        display: 'flex',\r\n        right: '2%',\r\n        position: 'absolute',\r\n    },\r\n    penSizeOptionsContainer: {\r\n        cursor: 'pointer',\r\n    },\r\n    penSizeOptions: {\r\n        padding: theme.spacing(2),\r\n        verticalAlign: 'baseline', \r\n        alignItems: 'flex-end',\r\n        display: 'flex',\r\n    },\r\n    penSize: {\r\n        cursor: 'pointer',\r\n        margin: theme.spacing(1),\r\n    },\r\n    colorOptionsContainer: {\r\n        cursor: 'pointer',\r\n\r\n    },\r\n    colorSizeOptions: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    clearOptionContainer: {\r\n        cursor: 'pointer',\r\n        top: '12px',\r\n        display: 'flex',\r\n        height: '20%',\r\n        left: '95%',\r\n        position: 'absolute',\r\n    },\r\n    eraserIcon: {\r\n        width: 24,\r\n        height: 24,\r\n        cursor: 'pointer',\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: theme.spacing(0.5),\r\n\r\n    }\r\n}));\r\n\r\nconst GameBoardOptions = (props) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openColorPopper, setOpenColorPopper] = useState(false);\r\n    const [openPenPopper, setOpenPenPopper] = useState(false);\r\n    const [menuContent, setMenuContent] = useState();\r\n\r\n    const {\r\n        penSize,\r\n        setPenSize,\r\n        activeColor,\r\n        setActiveColor,\r\n        clearBoard,\r\n        fillBoard,\r\n        penType,\r\n        setPenType,\r\n    } = props;\r\n\r\n\r\n    const handleClick = (option) => (event) => {\r\n        setMenuContent(option)\r\n        setAnchorEl(event.currentTarget);\r\n        if (option === 'pen') {\r\n            setOpenPenPopper(!openPenPopper);\r\n            setOpenColorPopper(false);\r\n        } else {\r\n            setOpenColorPopper(!openColorPopper);\r\n            setOpenPenPopper(false);\r\n        }\r\n    };\r\n\r\n    const handleColorChangeComplete = (color) => {\r\n        setActiveColor(color.hex)\r\n      };\r\n\r\n    const handlePenOptionClick = (optionType) => {\r\n        switch(optionType) {\r\n            case 'small': {\r\n                setPenType('pen');\r\n                setPenSize(SMALL_PEN_SIZE);\r\n                break;\r\n            }\r\n            case 'default': {\r\n                setPenType('pen');\r\n                setPenSize(MEDIUM_PEN_SIZE);\r\n                break;\r\n            }\r\n            case 'large': {\r\n                setPenType('pen');\r\n                setPenSize(LARGE_PEN_SIZE);\r\n                break;\r\n            }\r\n            case 'fill': {\r\n                setPenType('fill')\r\n                break;\r\n            }\r\n            case 'erase': {\r\n                setPenType('eraser');\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPenOptionsIcon = () => {\r\n        switch(penType) {\r\n            case 'pen': {\r\n                return (<Lens color='secondary' fontSize={`${penSize === SMALL_PEN_SIZE ? 'small' : penSize === MEDIUM_PEN_SIZE ? 'default' : 'large'}`}/>);\r\n            }\r\n            case 'fill': {\r\n                return (<FormatColorFill color='secondary' fontSize='large' />);\r\n            }\r\n            case 'eraser': {\r\n                return (\r\n                    <SvgIcon className={classes.eraserIcon} color='secondary' fontSize='large'>\r\n                        <path d=\"M28.7,8.9l-5.7-5.7c-1.1-1.1-3.1-1.1-4.2,0l-7.1,7.1c0,0,0,0,0,0s0,0,0,0l-7.5,7.5c-1.2,1.2-1.2,3.1,0,4.2l3.8,3.8\r\n                                c0.2,0.2,0.4,0.3,0.7,0.3h6.6c0.3,0,0.5-0.1,0.7-0.3l12.7-12.7c0,0,0,0,0,0C29.9,12,29.9,10.1,28.7,8.9z M14.9,24.1H9.2l-3.5-3.5\r\n                                c-0.4-0.4-0.4-1,0-1.4l6.8-6.8l7.1,7.1L14.9,24.1z\"/>\r\n                        <path d=\"M27,28H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h22c0.6,0,1-0.4,1-1S27.6,28,27,28z\"/>\r\n                    </SvgIcon>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getMenuContent = () => {\r\n        switch(menuContent){\r\n            case 'pen': {\r\n                return (\r\n                    <div className={classes.penSizeOptions}>\r\n                        <Lens className={classes.penSize} color='secondary' fontSize='small' onClick={() =>  handlePenOptionClick('small')}/>\r\n                        <Lens className={classes.penSize} color='secondary' fontSize='default' onClick={() => handlePenOptionClick('default')}/>\r\n                        <Lens className={classes.penSize} color='secondary' fontSize='large' onClick={() => handlePenOptionClick('large')}/>\r\n                        <FormatColorFill className={classes.penSize} color='secondary' fontSize='large' onClick={() => handlePenOptionClick('fill')}/>\r\n                        <SvgIcon className={classes.penSize} color='secondary' fontSize='default' onClick={() => handlePenOptionClick('erase')}>\r\n                            <path d=\"M28.7,8.9l-5.7-5.7c-1.1-1.1-3.1-1.1-4.2,0l-7.1,7.1c0,0,0,0,0,0s0,0,0,0l-7.5,7.5c-1.2,1.2-1.2,3.1,0,4.2l3.8,3.8\r\n                                c0.2,0.2,0.4,0.3,0.7,0.3h6.6c0.3,0,0.5-0.1,0.7-0.3l12.7-12.7c0,0,0,0,0,0C29.9,12,29.9,10.1,28.7,8.9z M14.9,24.1H9.2l-3.5-3.5\r\n                                c-0.4-0.4-0.4-1,0-1.4l6.8-6.8l7.1,7.1L14.9,24.1z\"/>\r\n                            <path d=\"M27,28H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h22c0.6,0,1-0.4,1-1S27.6,28,27,28z\"/>\r\n                        </SvgIcon>\r\n                    </div>\r\n                )\r\n            }\r\n            case 'color': {\r\n                return (\r\n                    <div className={classes.colorSizeOptions}>\r\n                        <CirclePicker\r\n                            onChangeComplete={handleColorChangeComplete}\r\n                            color={activeColor}\r\n                            colors={COLORS} \r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return ''\r\n            }\r\n        }\r\n    }\r\n\r\n    const closePopper = () => {\r\n        setOpenPenPopper(false);\r\n        setOpenColorPopper(false);\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n        <div className={classes.optionsContainer} >\r\n            <Popper open={openPenPopper || openColorPopper} anchorEl={anchorEl} placement='top' transition onMouseLeave={() => closePopper()}>\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                        <Paper>\r\n                            {getMenuContent()}\r\n                        </Paper>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n            <div className={classes.penSizeOptionsContainer} onClick={handleClick('pen')}>\r\n                {getPenOptionsIcon()}\r\n            </div>\r\n            <div className={classes.colorOptionsContainer} onClick={handleClick('color')}>\r\n                <Palette color='secondary' fontSize='large'/>\r\n            </div>\r\n            <div className={classes.colorOptionsContainer} onClick={() => clearBoard(true)}>\r\n                <Clear color='secondary' fontSize='large' />\r\n            </div>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GameBoardOptions;","import { React, useRef, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport  GameBoardOptions  from './GameBoardOptions.js'\r\nimport _ from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gameBoard: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '65vh',\r\n        margin: '20px 0 40px 0',\r\n        flex: '1',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '35vh',\r\n        }\r\n    },\r\n    gameBoardCanvas: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        boxShadow: '10px 10px 5px 0 rgba(0,0,0, .15)',\r\n        userSelect: 'none',\r\n        '-webkit-tap-highlight-color': 'rgba(0, 0, 0, 0)',\r\n        '-webkitUserDrag': 'none',\r\n        width: '100%',\r\n    },\r\n    gameBoardBottom: {\r\n        backgroundColor: '#999',\r\n        borderRadius: '0 0 12px 12px',\r\n        bottom: '0',\r\n        height: '12px',\r\n        left: '-10px',\r\n        position: 'absolute',\r\n        width: 'calc(100% + 20px)',\r\n        zIndex: '10',\r\n        boxShadow: '0px -5px 5px -1px rgba(0,0,0, .15)',\r\n    },\r\n}));\r\n\r\nconst GameBoard = ({socket, setDisplayPen, isYourTurn, handlePenSize, handlePenColor}) => {\r\n    const canvasRef = useRef(null);\r\n    const [activeColor, setActiveColor] = useState('#000000');\r\n    const [penSize, setPenSize] = useState(5);\r\n    const [penType, setPenType] = useState('pen');\r\n\r\n    let context;\r\n    let isDrawing = false;\r\n    let testTime = 0;\r\n    const current = {\r\n        color: 'black'\r\n    };\r\n    let noDrawingEvents = true;\r\n\r\n    const queue = {\r\n        items: [],\r\n    \r\n        enqueue: function(item) {\r\n            this.items.push(item);                \r\n        },\r\n    \r\n        dequeue: function() {\r\n            return this.items.shift();                                                \r\n        },\r\n    \r\n        peek: function(){\r\n            return this.items[0];                  \r\n        },\r\n    };\r\n    \r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        handlePenSize(penSize);\r\n    }, [penSize]);\r\n\r\n    useEffect(() => {\r\n        handlePenColor(activeColor);\r\n    }, [activeColor]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', onResize, false);\r\n        onResize();\r\n\r\n        if (socket) {\r\n            socket.on('drawing', data => {\r\n                onDrawingEvent(data);\r\n\r\n                if (noDrawingEvents) {\r\n                    setTimeout(() => readFromQueue(false), 500);\r\n                    noDrawingEvents = false;\r\n                }\r\n            });\r\n\r\n            socket.on('clear board', data => {\r\n                onDrawingEvent(data);\r\n\r\n                if (noDrawingEvents) {\r\n                    setTimeout(() => readFromQueue(false), 500);\r\n                    noDrawingEvents = false;\r\n                }\r\n            });\r\n\r\n            socket.on('fill board', data => {\r\n                onDrawingEvent(data);\r\n\r\n                if (noDrawingEvents) {\r\n                    setTimeout(() => readFromQueue(false), 500);\r\n                    noDrawingEvents = false;\r\n                }\r\n            });\r\n\r\n            socket.on('switch turns', () => {\r\n                clearBoard(false);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', onResize, false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() =>{\r\n        if (canvasRef && canvasRef.current) {\r\n            if (isYourTurn) {\r\n                canvasRef.current.style.cursor = 'none';\r\n            }\r\n            else {\r\n                canvasRef.current.style.cursor = 'default';\r\n            }\r\n        }\r\n    }, [isYourTurn]);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        context = canvas.getContext('2d');\r\n        if (isYourTurn) {\r\n            canvas.addEventListener('mousedown', onMouseDown, false);\r\n            canvas.addEventListener('mouseup', onMouseUp, false);\r\n            canvas.addEventListener('mouseout', onMouseUp, false);\r\n            canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\r\n        \r\n            canvas.addEventListener('touchstart', onMouseDown, false);\r\n            canvas.addEventListener('touchend', onMouseUp, false);\r\n            canvas.addEventListener('touchcancel', onMouseUp, false);\r\n            canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\r\n        }\r\n\r\n        // prevent memory leaks\r\n        return () => {\r\n            if (isYourTurn) {           \r\n                canvas.removeEventListener('mousedown', onMouseDown, false);\r\n                canvas.removeEventListener('mouseup', onMouseUp, false);\r\n                canvas.removeEventListener('mouseout', onMouseUp, false);\r\n                canvas.removeEventListener('mousemove', throttle(onMouseMove, 5), false);\r\n            \r\n                canvas.removeEventListener('touchstart', onMouseDown, false);\r\n                canvas.removeEventListener('touchend', onMouseUp, false);\r\n                canvas.removeEventListener('touchcancel', onMouseUp, false);\r\n                canvas.removeEventListener('touchmove', onMouseMove, false);\r\n            }\r\n        }\r\n    }, [penSize, setPenSize, activeColor, setActiveColor, penType, setPenType, isYourTurn]);\r\n\r\n    function readFromQueue(waitTime) {\r\n        let item = queue.dequeue();\r\n        if (item !== undefined) {\r\n            drawFromEvent(item);\r\n\r\n            if (waitTime)\r\n                setTimeout(() => readFromQueue(true), item.time);\r\n            else\r\n                readFromQueue(true);\r\n        }\r\n        else {\r\n            noDrawingEvents = true;\r\n        }\r\n    }\r\n\r\n    const fillBoard = (emit, color) => {\r\n        const canvas = canvasRef.current;\r\n        const w = canvas.width;\r\n        const h = canvas.height;\r\n        \r\n        context = canvas.getContext('2d');\r\n        context.beginPath();\r\n        context.rect(0, 0, w, h);\r\n        context.fillStyle = color ? color : activeColor;\r\n        context.fill();\r\n\r\n        if (!emit || !socket) return;\r\n        socket.emit('fill', activeColor);\r\n    }\r\n\r\n    const clearBoard = (emit) => {\r\n        const canvas = canvasRef.current;\r\n        const w = canvas.width;\r\n        const h = canvas.height;\r\n\r\n        context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, w, h);\r\n\r\n        if (!emit || !socket) return;\r\n        socket.emit('clear');\r\n    }\r\n\r\n    const drawLine = (x0, y0, x1, y1, color, size, emit) => {\r\n        if (penType === 'fill') {\r\n            fillBoard(emit, color)\r\n            return;\r\n        }\r\n        const penColor = penType === 'eraser' ? '#FFFFFF' : color;\r\n        const canvas = canvasRef.current;\r\n        const w = canvas.width;\r\n        const h = canvas.height;\r\n\r\n        context.beginPath();\r\n        context.moveTo(x0, y0);\r\n        context.lineTo(x1, y1);\r\n        context.strokeStyle = penColor;\r\n        context.lineWidth = size;\r\n        context.lineCap = 'round';\r\n        context.stroke();\r\n  \r\n        if (!emit || !socket) return;\r\n\r\n        let difference;\r\n        if (testTime === 0) {\r\n            difference = 0;\r\n            testTime = new Date().getTime();\r\n        }\r\n        else {\r\n            let time = new Date().getTime();\r\n            difference = time - testTime;\r\n            testTime = time;\r\n        }\r\n        \r\n        socket.emit('drawing1', {\r\n            x0: x0 / w,\r\n            y0: y0 / h,\r\n            x1: x1 / w,\r\n            y1: y1 / h,\r\n            penColor,\r\n            size,\r\n            time: difference\r\n        });\r\n        \r\n    };\r\n\r\n    const getXCord = (evt) => {\r\n        const canvas = canvasRef.current;\r\n        let rect = canvas.getBoundingClientRect();\r\n        let x = _.get(evt, 'clientX') || _.get(evt, 'touches[0].clientX');\r\n        return (x - rect.left) / (rect.right - rect.left) * canvas.width\r\n    }\r\n\r\n    const getYCord = (evt) => {\r\n        const canvas = canvasRef.current;\r\n        let rect = canvas.getBoundingClientRect();\r\n        let y = _.get(evt, 'clientY') || _.get(evt, 'touches[0].clientY');\r\n        return (y - rect.top) / (rect.bottom - rect.top) * canvas.height\r\n    }\r\n\r\n    const onMouseDown = (e) => {\r\n        isDrawing = true;\r\n        current.X = getXCord(e);\r\n        current.Y = getYCord(e);\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n        drawLine(current.X, current.Y, getXCord(e), getYCord(e), activeColor, penSize, true);\r\n        current.X = getXCord(e);\r\n        current.Y = getYCord(e);\r\n    };\r\n\r\n    const onMouseUp = (e) => {\r\n        if (!isDrawing || e === undefined) {\r\n            return;\r\n        }\r\n        isDrawing = false;\r\n        let x = getXCord(e);\r\n        let y = getYCord(e);\r\n\r\n        if (isNaN(x) || isNaN(y))\r\n            return;\r\n        drawLine(current.X, current.Y, getXCord(e), getYCord(e), activeColor, penSize, true);\r\n    };\r\n\r\n    const throttle = (callback, delay) => {\r\n        let previousCall = new Date().getTime();\r\n        return function() {\r\n            const time = new Date().getTime();\r\n            if ((time - previousCall) >= delay) {\r\n                previousCall = time;\r\n                callback.apply(null, arguments);\r\n            }\r\n        };\r\n    };\r\n\r\n    const onResize = () => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            const parentEl = document.getElementById('gameBoard');\r\n            canvas.width = parentEl && parentEl.clientWidth;\r\n            canvas.height = parentEl && parentEl.clientHeight;\r\n        }\r\n    };\r\n\r\n    const onDrawingEvent = (data) => {\r\n        queue.enqueue(data);\r\n    }\r\n\r\n    const drawFromEvent = (data) => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas !== null) {\r\n\r\n            switch(data.eventType) {\r\n                case 'clear board': {\r\n                    clearBoard(false);\r\n                    break;\r\n                }\r\n                case 'fill board': {\r\n                    fillBoard(false, data.color);\r\n                    break\r\n                }\r\n                default: {\r\n                    const w = canvas.width;\r\n                    const h = canvas.height;\r\n                    drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.penColor, data.size, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.gameBoard} id=\"gameBoard\" onMouseOut={() => setDisplayPen(false)} onMouseOver={() => setDisplayPen(true)}>\r\n            <canvas ref={canvasRef} className={classes.gameBoardCanvas}/>\r\n            <div className={classes.gameBoardBottom}></div>\r\n            {isYourTurn && \r\n                <GameBoardOptions \r\n                penSize={penSize}\r\n                setPenSize={setPenSize}\r\n                activeColor={activeColor}\r\n                setActiveColor={setActiveColor}\r\n                fillBoard={fillBoard}\r\n                clearBoard={clearBoard}\r\n                penType={penType} \r\n                setPenType={setPenType}\r\n                setDisplayPen={setDisplayPen}\r\n            />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatMessageContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginTop: '5px',\r\n  },\r\n  name: {\r\n    fontWeight: '600',\r\n    fontSize: '15 px',\r\n    textAlign: 'left',\r\n  },\r\n  text: {\r\n    marginLeft: '10px',\r\n    fontWeight: '400',\r\n    fontSize: '15px'\r\n  },\r\n  correct: {\r\n    fontWeight: '600',\r\n    fontSize: '15 px',\r\n    color: \"#02DB02\",\r\n  }\r\n \r\n}));\r\n\r\nfunction ChatMessage({name, text, isCorrect}) {\r\n  const classes = useStyles();\r\n\r\n  if (!isCorrect) {\r\n    return (\r\n        <div className={classes.chatMessageContainer}>\r\n          <h4 className={classes.name}>{`${name}:`}</h4>\r\n          <h4 className={classes.text}>{text}</h4>\r\n        </div>\r\n      );\r\n  }\r\n  else {\r\n    return (\r\n      <div className={classes.chatMessageContainer}>\r\n          <h4 className={classes.correct}>{`${name} guessed correctly`}</h4>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n    \r\nexport default ChatMessage;\r\n    ","import React, {useState, useEffect } from 'react';\r\nimport { \r\n    Paper,\r\n    TextField,\r\n    Popper,\r\n    Fade,\r\n    Chip,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChatMessage from './ChatMessage';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      chatContainer: {\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        boxShadow: '10px 10px 5px 0 rgba(0,0,0, .15)',\r\n      },\r\n      chatOutputContainer: {\r\n        overflowY: 'auto',\r\n        flex: '1',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'column',\r\n        paddingRight: theme.spacing(1.5),\r\n        paddingLeft: theme.spacing(1.5),\r\n      },\r\n      chatInputContainer: {\r\n        padding: theme.spacing(1.5),\r\n        height: 'auto',\r\n      },\r\n      chatHeader: {\r\n        margin: 'auto',\r\n        padding: '10px 0 5px 0',\r\n        fontWeight: '400',\r\n        fontSize: '20px'\r\n      },\r\n      wordOptions: {\r\n        padding: theme.spacing(1),\r\n        verticalAlign: 'baseline', \r\n        alignItems: 'flex-end',\r\n        display: 'flex',\r\n    },\r\n    word: {\r\n      cursor: 'pointer',\r\n  },\r\n  }));\r\n\r\nfunction ChatContainer({\r\n    onNewWord,\r\n    words,\r\n    canType, \r\n    isSpellCheck,\r\n    onKeyDown,\r\n    setMissSpelledWords,\r\n    missSpelledWords,\r\n    suggetions,\r\n  }) {\r\n\r\n  const [word, setWord] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openPopper, setOpenPopper] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (_.get(missSpelledWords, 'length') > 0) {\r\n      setOpenPopper(true);\r\n    }\r\n  }, [missSpelledWords, word]);\r\n\r\n\r\n  function handleKeyPressed(e) {\r\n    setAnchorEl(e.currentTarget);\r\n\r\n    if (e.key === 'Enter'){\r\n      setWord(\"\");\r\n      onNewWord(word.trim().toLowerCase());\r\n    }\r\n  }\r\n\r\n  const handleOnChange = (v) => {\r\n    if (isSpellCheck) {\r\n      onKeyDown(v.target.value)\r\n    }\r\n    setWord(v.target.value)\r\n  }\r\n\r\n  const handleSuggestionClick = (newWord) => {\r\n    setWord(_.replace(word, _.get(missSpelledWords, '[0]'), newWord))\r\n    setMissSpelledWords([]);\r\n  }\r\n\r\n  const closePopper = () => {\r\n    setOpenPopper(false);\r\n  }\r\n\r\n  const getMenuContent = () => {\r\n    if ((_.get(missSpelledWords, 'length') > 0) && _.get(suggetions, '[0].length') > 0) {\r\n      return (\r\n        <div className={classes.wordOptions}>\r\n          {suggetions[0].map((newWord, index) => (index < 3) && <Chip onClick={() => handleSuggestionClick(newWord)} className={classes.word} label={newWord} color=\"secondary\"/>)}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.chatContainer}>\r\n        <Popper open={openPopper} anchorEl={anchorEl} placement='top' transition onMouseLeave={() => closePopper()}>\r\n            {({ TransitionProps }) => (\r\n                <Fade {...TransitionProps} timeout={350}>\r\n                    <Paper>\r\n                        {getMenuContent()}\r\n                    </Paper>\r\n                </Fade>\r\n            )}\r\n        </Popper>\r\n        <h2 className={classes.chatHeader}>Guesses</h2>\r\n        <div className={classes.chatOutputContainer}>\r\n          { words !== undefined && \r\n            words.map((word, index) => <ChatMessage key={index} isCorrect={word.isCorrect} name={word.name} text={word.word}/>)\r\n          }\r\n        </div>\r\n        <div className={classes.chatInputContainer}>\r\n          { canType && \r\n              <TextField value={word} onKeyDown={handleKeyPressed} \r\n                onChange={v => handleOnChange(v)}\r\n                size='small' variant='filled' \r\n                fullWidth label=\"Type your guess...\"\r\n                error={_.get(missSpelledWords, 'length') > 0} \r\n              />\r\n            }\r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n    \r\nexport default ChatContainer;\r\n    ","export default __webpack_public_path__ + \"static/media/clock.1c1ca49f.svg\";","import { React } from 'react';\r\nimport clockImage from '../../../../assets/images/clock.svg';\r\nimport \"./Timer.css\";\r\n\r\nfunction Timer({time}) {\r\n    return (\r\n        <div className=\"Timer\">\r\n            <img className=\"Timer-image\" src={ clockImage } />\r\n            <h5 className=\"Timer-text\">{`${time}s`}</h5>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './GameOverModal.css';\r\nimport {Button} from '@material-ui/core';\r\nimport Emojis from '../../../../assets/images/DisplayEmojis/DisplayEmojis';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction GameOverModal({isOpen, topUsers, handlePlayAgain}) {\r\n    const router = useHistory();\r\n\r\n    function createPodium(place, name, emojiId) {\r\n\r\n        let height;\r\n        let placeText;\r\n        let color;\r\n        switch (place) {\r\n            case 1:\r\n                height = \"90%\";\r\n                placeText=\"1st\";\r\n                color = \"#ffd700\";\r\n                break;\r\n            case 2:\r\n                height = \"70%\";\r\n                placeText = \"2nd\";\r\n                color = \"#C0C0C0\";\r\n                break;\r\n            case 3:\r\n                height = \"50%\";\r\n                placeText = \"3rd\";\r\n                color = \"#cd7f32\";\r\n                break;\r\n            default:\r\n                height = \"0%\";\r\n                placeText = \"\";\r\n                color=\"#ffffff\";\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div style={{height: height}} className=\"GameOverModal-place\">\r\n                <img src={Emojis[emojiId]}/>\r\n                <h4>{name}</h4>\r\n                <div className=\"GameOverModal-podium\" style={{backgroundColor: color}}></div>\r\n                <h3>{placeText}</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getPlaces(place) {\r\n        if (topUsers !== undefined) {\r\n            let user = topUsers.find(i => i.place === place);\r\n            if (user !== undefined) {\r\n                return createPodium(place, user.name, user.emojiId);\r\n            }\r\n        }\r\n    }\r\n\r\n    function goToHome() {\r\n        router.push('/');\r\n    }\r\n\r\n    return (\r\n        <Modal overlayClassName='GameOverModal-overlay' className='GameOverModal-content' isOpen={isOpen}>\r\n            <div className=\"GameOverModal-container\">\r\n                <h1>Game Over</h1>\r\n                <div className=\"GameOverModal-places\">\r\n                    {getPlaces(2)}\r\n                    {getPlaces(1)}\r\n                    {getPlaces(3)}\r\n                </div>\r\n                <div className=\"GameOverModal-buttons\">\r\n                    <Button onClick={goToHome} style={{width: '40%'}} variant=\"contained\">Leave</Button>\r\n                    <Button onClick={handlePlayAgain} style={{width: '40%'}} variant=\"contained\" color=\"secondary\">Play Again</Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n      );\r\n}\r\n\r\n\r\nexport default GameOverModal;","export default __webpack_public_path__ + \"static/media/correctWord.d7101710.mp3\";","export default __webpack_public_path__ + \"static/media/turnStart.74635a80.mp3\";","import { React, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport pencil from '../../../assets/images/pencil.svg';\r\nimport GameBoard from './GameBoard.js'\r\nimport Chat from '../Components/ChatView/ChatContainer';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport Timer from './Timer/Timer';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport authenticationService from '../../../services/AuthenticationService';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport GameOverModal from '../Components/GameOverModal/GameOverModal';\r\nimport {Howl, Howler} from 'howler';\r\nimport correctWordSrc from '../../../assets/sounds/correctWord.mp3';\r\nimport turnStartSrc from '../../../assets/sounds/turnStart.mp3';\r\nimport _ from 'lodash';\r\n\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        position: 'relative',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '40vh',\r\n          }\r\n    },\r\n    gameBoardPen: {\r\n        top: '0',\r\n        left: '0',\r\n        position: 'absolute',\r\n        borderRadius: 100,\r\n        cursor: 'none',\r\n        border: '1px solid black',\r\n        pointerEvents: 'none',\r\n        zIndex:99999,\r\n        // visibility: 'hidden'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 0,\r\n          }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    gridItem: {\r\n        height: '100%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '20vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }\r\n    },\r\n    gridItemGame: {\r\n        display: 'flex',\r\n        // height: '100%',\r\n        flexDirection: 'column',\r\n    },\r\n    gameHeader: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        verticalAlign: 'center',\r\n        color: '#36363'\r\n    },\r\n    gameHeaderPaper: {\r\n        width: 'auto',\r\n        margin: 'auto',\r\n        boxShadow: '10px 10px 5px 0 rgba(0,0,0, .15)',\r\n        padding: '10px',\r\n    },\r\n    wordPicker: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '0',\r\n        bottom: '40px',\r\n        width: '100%',\r\n        borderRadius: '5px',\r\n        background: ' rgba(0, 0, 0, 0.7)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n    wordGrid: {\r\n        marginTop: '10px',\r\n        display: 'grid',\r\n        gridGap: '8px',\r\n        gridTemplateColumns: '1fr 1fr 1fr'\r\n    },\r\n    wordHint: {\r\n        whiteSpace: 'break-spaces',\r\n    },\r\n    headerItems: {\r\n        margin: 'auto',\r\n    },\r\n}));\r\n\r\nconst Game = ({socket, handlePlayAgain, isSpellCheck}) => {\r\n    Howler.volume(0.8);\r\n    const gameBoardPenRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [displayPen, setDisplayPen] = useState(false);\r\n    const [words, setWords] = useState([]);\r\n    const [chooseWords, setChooseWords] = useState([]);\r\n    const [turnStarted, setTurnStarted] = useState(false);\r\n    const [isYourTurn, setIsYourTurn] = useState(false);\r\n    const [turnEnded, setTurnEnded] = useState(false);\r\n    const [correctWord, setCorrectWord] = useState(\"\");\r\n    const [timer, setTimer] = useState(0);\r\n    const [round, setRound] = useState(\"\");\r\n    const [wordHint, setWordHint] = useState(\"\");\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n    const [topUsers, setTopUsers] = useState([]);\r\n    const [missSpelledWords, setMissSpelledWords] = useState([]);\r\n    const [suggetions, setSuggetions] = useState({});\r\n    const turnEndedAnimation = useSpring({\r\n        opacity: turnEnded ? 1 : 0\r\n    });\r\n    const turnStartedAnimation = useSpring({\r\n        from: {opacity: !turnEnded ? 0 : 1},\r\n        to: {opacity: !turnEnded ? 1 : 0}\r\n    });\r\n    const correctWordSound = new Howl({src: correctWordSrc});\r\n    const turnStartSound = new Howl({src: turnStartSrc});\r\n    const [penSize, setPenSize] = useState(5); \r\n    const [penColor, setPenColor] = useState(\"#000000\"); \r\n\r\n    useEffect(() => {\r\n        if (socket !== undefined) {\r\n            socket.on('new guess', handleNewGuess);\r\n\r\n            // your turn has started\r\n            socket.on('start your turn', words => {\r\n                setWords([]);\r\n                setIsYourTurn(true);\r\n                setTurnEnded(false);\r\n                setTurnStarted(false);\r\n                setChooseWords(words);\r\n            });\r\n\r\n            // it is the userId's turn\r\n            socket.on('switch turns', data => {\r\n                let id = authenticationService.getId();\r\n                if (id !== data.userId) {\r\n                    setWords([]);\r\n                    setIsYourTurn(false);\r\n                    setTurnEnded(false);\r\n                    setTurnStarted(false);\r\n                }\r\n            });\r\n\r\n            // a new players turn started\r\n            socket.on('turn started', (data) => {\r\n                turnStartSound.play();\r\n                setRound(`${data.round} of ${data.totalRounds}`);\r\n                setWordHint(data.wordHint.toUpperCase());\r\n                setTurnStarted(true);\r\n                setTurnEnded(false);\r\n            });\r\n\r\n            // timer updates\r\n            socket.on('timer', time => {\r\n                setTimer(time);\r\n            });\r\n\r\n            // turn ends\r\n            socket.on('turn end', data => {\r\n                handleTurnEnd(data.word);\r\n                setWordHint(\"\");\r\n                setTimer(0);\r\n            });\r\n\r\n            socket.on('game over', topUsers => {\r\n                handleGameOver(topUsers);\r\n            });\r\n\r\n            socket.on('word hint update', data => {\r\n                setWordHint(data.wordHint);\r\n            });\r\n\r\n            socket.on('spelling checked', data => {\r\n                setMissSpelledWords(data.missSpelledWords);\r\n                setSuggetions(data.suggestions);\r\n            })\r\n        }\r\n    }, []);\r\n    \r\n    function handleGameOver(topUsers) {\r\n        setTopUsers(topUsers);\r\n        setIsGameOver(true);\r\n    }\r\n\r\n    function handleNewGuess(data) {\r\n        if (data.isCorrect) \r\n            correctWordSound.play();\r\n        \r\n        let newWord = {name: data.name, word: data.word, isCorrect: data.isCorrect};\r\n        setWords(oldWords => [...oldWords, newWord]);\r\n    }\r\n\r\n    const onPenMove = (e) => {\r\n        gameBoardPenRef.current.style.left = `${e.pageX-(penSize/2)}px`;\r\n        gameBoardPenRef.current.style.top = `${e.pageY-(penSize/2)}px`;\r\n    }\r\n\r\n    const handleKeyDown = (word) => {\r\n        if (_.get(word, 'length') > 0) {\r\n            socket.emit('spell check', {\r\n                corpus: word,\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleSendWord(word) {\r\n        if (word !== undefined && word.length > 0) {\r\n            socket.emit('send word', {\r\n                word: word,\r\n                timeLeft: timer\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleWordSelection(word, difficulty) {\r\n        socket.emit('word selected', {\r\n            word: word,\r\n            difficulty: difficulty\r\n        });\r\n        setWordHint(word.toUpperCase());\r\n        setChooseWords([]);\r\n    }\r\n\r\n    function handleTurnEnd(word) {\r\n        setTurnEnded(true);\r\n        setCorrectWord(word.toUpperCase());\r\n    }\r\n\r\n    function handlePenSize(size) {\r\n        setPenSize(size);        \r\n    }\r\n\r\n    function handlePenColor(color) {\r\n        setPenColor(color);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            {isYourTurn && displayPen && <div style={{background: penColor, width: penSize, height: penSize}} ref={gameBoardPenRef} className={classes.gameBoardPen}>\r\n                </div>}\r\n            <Grid className={classes.gridContainer} container spacing={3}>\r\n                <Grid className={classes.gridItemGame} item spacing={12} xs={12} md={10} lg={10}>\r\n                    <div >\r\n                        <Paper className={classes.gameHeaderPaper}>\r\n                            <Grid container className={classes.gameHeader}>\r\n                                <Grid className={classes.headerItems} item xs={3} sm={3}>\r\n                                    <h2 style={{fontWeight: 500}}>{`Round: ${round}`}</h2>\r\n                                </Grid>\r\n                                <Grid className={classes.headerItems} item xs={6} sm={6}>\r\n                                    <h2 className={classes.wordHint}>{`${wordHint}`}</h2>\r\n                                </Grid>\r\n                                <Grid className={classes.headerItems} item xs={3} sm={3}>\r\n                                    <Timer time={timer}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </div>\r\n                    <div  onMouseMove={(e) => displayPen && isYourTurn && onPenMove(e)} className={classes.game} >\r\n                        <GameBoard handlePenColor={handlePenColor} handlePenSize={handlePenSize} socket={socket} setDisplayPen={setDisplayPen} isYourTurn={isYourTurn}/>\r\n                        {!turnStarted && \r\n                            <animated.div style={turnStartedAnimation}>\r\n                                <div className={classes.wordPicker}>\r\n                                    <h1>{ isYourTurn ? \"Choose a word:\" : \"Waiting for player to choose a word...\"}</h1>\r\n                                    { isYourTurn && <div className={classes.wordGrid}>\r\n                                        {chooseWords && chooseWords.map((word, index) => {\r\n                                            return <Button key={index} onClick={() => handleWordSelection(word.word, word.difficulty)} \r\n                                                variant=\"contained\">{word.word}</Button>\r\n                                        })}\r\n                                    </div>}\r\n                                </div>\r\n                            </animated.div> \r\n                        }\r\n                        { turnEnded && \r\n                            <animated.div style={turnEndedAnimation}>\r\n                                <div className={classes.wordPicker}>\r\n                                    <h1>{\"Turn over\"}</h1>\r\n                                    <h2>\r\n                                        <span style={{fontWeight: 400}}>The Correct word was: </span>\r\n                                        {correctWord}\r\n                                    </h2>\r\n                                </div>\r\n                            </animated.div> \r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={classes.gridItem} item xs={12} md={2} lg={2}>\r\n                    <Chat \r\n                        canType={!isYourTurn && turnStarted} \r\n                        words={words} \r\n                        onNewWord={handleSendWord} \r\n                        isSpellCheck={isSpellCheck} \r\n                        onKeyDown={handleKeyDown}\r\n                        setMissSpelledWords={setMissSpelledWords}\r\n                        missSpelledWords={missSpelledWords}\r\n                        setSuggetions={setSuggetions}\r\n                        suggetions={suggetions}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        \r\n            <GameOverModal handlePlayAgain={handlePlayAgain} topUsers={topUsers} isOpen={isGameOver} />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from './Components/Game.js'\r\n\r\nfunction GameView(props) {\r\n    return <Game {...props}/>\r\n}\r\n\r\nexport default GameView;","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { IconButton, TextField, Button, Grid } from '@material-ui/core';\r\nimport './CreateLobbyModal.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CreateLobbyModal({isValidRoom, isPrivateRoom, isHost, validatePassword, errorMessage}) {\r\n\r\n  let showModal = !isValidRoom || (isPrivateRoom && !isHost);\r\n  const router = useHistory();\r\n  let password = useRef();\r\n\r\n  return (\r\n    <Modal overlayClassName='CreateLobbyModal-overlay' className='CreateLobbyModal-content' isOpen={showModal}>\r\n      <IconButton style={{\r\n        maxWidth:\"150px\",\r\n        padding: \"12px 0\", \r\n        fontSize:\"15px\"}} \r\n        onClick={() => router.push('/')}><ArrowBackIcon />Back to Lobby\r\n      </IconButton>\r\n\r\n      { isValidRoom ?\r\n        // if valid room, render password if needed\r\n        <div>\r\n          <h3>Enter the room password</h3>\r\n          <TextField label=\"Enter password\" placeholder=\"\" fullWidth={true} \r\n            variant=\"outlined\" InputLabelProps={{shrink: true}} size='small'\r\n            inputRef={password}            \r\n            style={{\r\n              marginTop: \"20px\"\r\n            }} \r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Button variant=\"contained\" color=\"secondary\" style={{\r\n                borderRadius: 0,\r\n                color: \"white\",\r\n                marginTop: \"20px\"\r\n              }}\r\n              onClick={() => validatePassword(password.current.value)}\r\n              >    \r\n                Join Game\r\n            </Button>\r\n          </Grid>\r\n        </div> :\r\n\r\n        // if not, room doesn't exist\r\n        <div className='CreateLobbyModal-error'>\r\n          <h1>{errorMessage}</h1>\r\n        </div>\r\n      }\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateLobbyModal;","import { React, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Close, Link } from '@material-ui/icons';\r\nimport { IconButton, TextField, Button } from '@material-ui/core';\r\nimport './InviteLinkModal.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nModal.setAppElement('#root');\r\nfunction InviteLinkModal({isOpen, setIsOpen}) {\r\n\r\n    function copyToClipboard() {\r\n        var tempInput = document.createElement(\"input\");\r\n        tempInput.value = window.location.href;\r\n        document.body.appendChild(tempInput);\r\n        tempInput.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(tempInput);\r\n\r\n        toast.info(\"Copied Link!\");\r\n    }\r\n    \r\n    return (\r\n        <Modal overlayClassName='InviteLinkModal-overlay' className='InviteLinkModal-content' isOpen={isOpen}\r\n            onRequestClose={() => setIsOpen(false)}>\r\n\r\n            <IconButton style={{\r\n                maxWidth:\"150px\",\r\n                padding: \"12px 0\", \r\n                fontSize:\"15px\"}} \r\n                onClick={() => setIsOpen(false)}><Close />\r\n            </IconButton>\r\n\r\n\r\n            <div>\r\n                <h3>Copy this link to invite friends!</h3>\r\n                <TextField label=\"Invite Link\" fullWidth={true} \r\n                variant=\"outlined\" InputLabelProps={{shrink: true}} size='small'\r\n                value={window.location.href}\r\n                disabled\r\n                style={{\r\n                    marginTop: \"20px\"\r\n                }} \r\n                />\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth={true} style={{\r\n                    borderRadius: 0,\r\n                    color: \"white\",\r\n                    marginTop: \"20px\",\r\n                    backgroundColor: \"#CE5BF7\",\r\n                }}\r\n                    onClick={copyToClipboard}>    \r\n                    <Link/> Copy Link\r\n                </Button>\r\n            </div>\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default InviteLinkModal;","import { React, useEffect, useState } from 'react';\r\nimport Background from '../../assets/images/Authpage_background.jpg';\r\nimport DoodleHeader from '../../components/DoodlerHeader.js'\r\nimport ParticipantView  from './Components/ParticipantView/ParticipantView';\r\nimport CustomizeView  from './Components/CustomizeView/CustomizeView';\r\nimport GameView from '../GameView/GameView.js';\r\nimport './CreateLobbyView.css';\r\nimport Axios from 'axios';\r\nimport authenticationService from '../../services/AuthenticationService';\r\nimport { useParams } from \"react-router-dom\";\r\nimport CreateLobbyModal from './Components/CreateLobbyModal/CreateLobbyModal';\r\nimport InviteLinkModal from './Components/InviteLinkModal/InviteLinkModal';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport io from 'socket.io-client';\r\nimport {\r\n  Grid,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Howl, Howler} from 'howler';\r\nimport joinedSoundSrc from '../../assets/sounds/userJoined.mp3';\r\nimport leftSoundSrc from '../../assets/sounds/userLeft.mp3';\r\nimport { ImportantDevices } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: `url(${Background})`,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    height: 'auto',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '90%',\r\n    minHeight: '600px',\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  customizeViewGridItem: {\r\n    display: 'flex',\r\n    width: 'auto',\r\n    height: '80%',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 'auto',\r\n    }\r\n  },\r\n}));\r\n\r\ntoast.configure();\r\nlet socket;\r\n\r\nfunction CreateLobbyView() {\r\n  Howler.volume(0.8);\r\n  const classes = useStyles();\r\n\r\n  let { roomId } = useParams();\r\n  const [isHost, setIsHost] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isPrivateRoom, setIsPrivateRoom] = useState(false);\r\n  const [initialRoomSettings, setRoomSettings] = useState({});\r\n  const [isValidRoom, setIsValidRoom] = useState(true);\r\n  const [isInviteLinkOpen, setIsInviteLinkOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [hostId, setHostId] = useState(\"\");\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n  const [timer, setTimer] = useState(\"-\");\r\n  const [rounds, setRounds] = useState(\"-\");\r\n  const [isSpellCheck, setIsSpellCheck] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [drawingUserId, setDrawingUserId] = useState(\"\");\r\n  const [correctUserIds, setCorrectUserIds] = useState([]);\r\n  const [canStartGame, setCanStartGame] = useState(false);\r\n  const [scores, setScores] = useState([]);\r\n  const joinedSound = new Howl({src: joinedSoundSrc});\r\n  const leftSound = new Howl({src: leftSoundSrc});\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function GetRoomInformation() {\r\n      try {\r\n        const response = await Axios.get(`/room/find/${roomId}`, {\r\n          headers: {\r\n            token: authenticationService.getToken()\r\n          }\r\n        });\r\n        setIsHost(response.data.room.isHost);\r\n        setRoomSettings(response.data.room);\r\n        setIsPrivateRoom(response.data.room.isPrivate);\r\n        setIsValidRoom(true);\r\n        setUsers(response.data.room.users);\r\n        setHostId(response.data.room.hostId);\r\n        setTimer(response.data.room.timer);\r\n        setRounds(response.data.room.rounds);\r\n        setIsSpellCheck(response.data.room.isSpellCheck)\r\n        \r\n        if (response.data.room.isHost)\r\n          connectToRoom();\r\n        else if (!response.data.room.isPrivate)\r\n          connectToRoom();\r\n        \r\n      }\r\n      catch {\r\n        setIsValidRoom(false);\r\n        setErrorMessage(\"This room does not exist\");\r\n      }\r\n      finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    GetRoomInformation();\r\n\r\n    window.addEventListener(\"beforeunload\", handleRefresh);\r\n    \r\n    return () => { \r\n      window.removeEventListener(\"beforeunload\", handleRefresh);\r\n      if (socket) {\r\n        socket.disconnect();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCanStartGame(users.length > 1);\r\n  }, [users]);\r\n\r\n  function handleRefresh(e) {\r\n    var confirmationMessage = 'Your place will be reset, are you sure you want to refresh?';\r\n\r\n    (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n    return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n  }\r\n\r\n  async function updateRoom(updatedData) {\r\n    try {\r\n\r\n      if (updatedData.rounds !== undefined && socket !== undefined) {\r\n        socket.emit('update room settings', {rounds : updatedData.rounds});\r\n      }\r\n\r\n      if (updatedData.timer !== undefined && socket !== undefined) {\r\n        socket.emit('update room settings', {timer : updatedData.timer});\r\n      }\r\n\r\n      \r\n      if (updatedData.isSpellCheck !== undefined && socket !== undefined) {\r\n        socket.emit('update room settings', {isSpellCheck : updatedData.isSpellCheck});\r\n      }\r\n\r\n      await Axios.patch(`/room/${roomId}`, updatedData, {\r\n        headers: {\r\n          token: authenticationService.getToken()\r\n        }\r\n      });\r\n    }\r\n    catch (err){\r\n      toast.error(\"Error updaing values\")\r\n    }\r\n  }\r\n\r\n  async function validatePassword(password) {\r\n    try {\r\n      await Axios.post(`/room/join/${roomId}`, \r\n      {\r\n        password: password\r\n      }, \r\n      {\r\n        headers: {\r\n          token: authenticationService.getToken()\r\n        }\r\n      });\r\n      setIsPrivateRoom(false);\r\n      connectToRoom();\r\n    }\r\n    catch (err){\r\n      toast.error(\"Incorrect password\")\r\n\r\n    }\r\n  }\r\n\r\n  function handleInviteLink() {\r\n    setIsInviteLinkOpen(true);\r\n  }\r\n\r\n  function connectToRoom() {\r\n    socket = io({\r\n      query: {\r\n        token: authenticationService.getToken(),\r\n        roomId: roomId,\r\n      }\r\n    });\r\n\r\n    socket.on('force disconnect', () => {\r\n      disconnect();\r\n    });\r\n    socket.on('game in progress', (game) => {\r\n      goToGame();\r\n    });\r\n    socket.on('game start', () => {\r\n      setIsGameStarted(true);\r\n    });\r\n    socket.on('switch turns', data => {\r\n      setCorrectUserIds([]);\r\n      setDrawingUserId(data.userId);\r\n    });\r\n    socket.on('correct guess', userId => {\r\n      setCorrectUserIds(oldIds => [...oldIds, userId]);\r\n    });\r\n    socket.on('user connected', (user) => {\r\n      userConnected(user);\r\n    });\r\n    socket.on('user disconnected', (userId) => {\r\n      userDisconnected(userId);\r\n    });\r\n    socket.on('new host', hostId => {\r\n      newHost(hostId);\r\n    });\r\n    socket.on('new room settings', (data) => {\r\n      if (data.timer !== undefined) {\r\n        setTimer(data.timer);\r\n      }\r\n      if (data.rounds !== undefined) {\r\n        setRounds(data.rounds);\r\n      }\r\n      if (data.isSpellCheck !== undefined) {\r\n        setIsSpellCheck(data.isSpellCheck);\r\n      }\r\n    });\r\n    socket.on('scores', scores => {\r\n      handleNewScores(scores);\r\n    });\r\n  }\r\n\r\n  function handleNewScores(scores) {\r\n    setScores(scores);\r\n  }\r\n\r\n  function goToGame() {\r\n    setIsGameStarted(true);\r\n  }\r\n\r\n  function userConnected(user) {\r\n    joinedSound.play();\r\n    setUsers(oldUsers => [...oldUsers, user]);\r\n  }\r\n\r\n  function userDisconnected(userId) {\r\n    leftSound.play();\r\n    setUsers(oldUsers => oldUsers.filter(i => i.id !== userId));\r\n  }\r\n\r\n  function newHost(hostId) {\r\n    setHostId(hostId);\r\n    if (hostId.toString() === authenticationService.getId() && !isHost) {\r\n      setIsHost(true);\r\n    }\r\n  }\r\n\r\n  function startGame() {\r\n    if (isHost && socket !== undefined) {\r\n      socket.emit('start game');\r\n    }\r\n  }\r\n\r\n  function disconnect() {\r\n    console.log('disconnected');\r\n    socket.disconnect();\r\n    setErrorMessage(\"The room is full\");\r\n    setIsValidRoom(false);\r\n  }\r\n\r\n  function resetGame() {\r\n    setIsGameStarted(false);\r\n  }\r\n\r\n  const createLobbyContent = () => (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container} maxWidth='md'>\r\n        <Grid className={classes.gridContainer} container spacing={3}>\r\n            <Grid item xs={12} className={classes.header}> \r\n              <DoodleHeader />\r\n            </Grid>\r\n            <Grid item xs={12} md={4} className={classes.customizeViewGridItem}> \r\n              <ParticipantView isGame={false} handleInviteLink={handleInviteLink} users={users} hostId={hostId}/>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} className={classes.customizeViewGridItem}>\r\n              { isLoading ? \r\n                    <div className=\"CreateLobbyView-waiting\">\r\n                        <h1>Loading...</h1>\r\n                    </div> :\r\n                    (isHost ?\r\n                      <CustomizeView canStartGame={canStartGame} className='' initialRoomSettings={initialRoomSettings} roomId={roomId} updateRoom={updateRoom} startGame={startGame}/> :\r\n                      <div className=\"CreateLobbyView-waiting\">\r\n                        <h1>Waiting for game to start...</h1>\r\n                        <h2>{`# of rounds: ${rounds} • Time each round: ${timer}s`}</h2>\r\n                      </div>)\r\n              }\r\n            </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <CreateLobbyModal \r\n        isValidRoom={isValidRoom} \r\n        errorMessage={errorMessage}\r\n        isHost={isHost} \r\n        isPrivateRoom={isPrivateRoom}\r\n        validatePassword={validatePassword}\r\n      />\r\n      <InviteLinkModal isOpen={isInviteLinkOpen} setIsOpen={setIsInviteLinkOpen}/>\r\n    </div>\r\n  )\r\n\r\n  const renderViewContent = () => {\r\n    if (!isGameStarted) {\r\n      return createLobbyContent();\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid className={classes.gridContainer} container spacing={3}>\r\n            <Grid item xs={12} className={classes.header}> \r\n              <DoodleHeader />\r\n            </Grid>\r\n            <Grid item xs={12} md={2} lg={2}className={classes.gameParticipantsViewGridItem}> \r\n              <ParticipantView isGame={true} scores={scores} correctUserIds={correctUserIds} drawingUserId={drawingUserId} handleInviteLink={handleInviteLink} users={users} hostId={hostId}/>\r\n            </Grid>\r\n            <Grid item xs={12} md={10} lg={10}className={classes.gameViewGridItem}>\r\n              {\r\n                <GameView\r\n                  roomId={roomId}\r\n                  socket={socket}\r\n                  handlePlayAgain={resetGame}\r\n                  isSpellCheck={isSpellCheck}\r\n                />\r\n              }\r\n            </Grid>\r\n        </Grid>\r\n        <CreateLobbyModal \r\n          isValidRoom={isValidRoom} \r\n          errorMessage={errorMessage}\r\n          isHost={isHost} \r\n          isPrivateRoom={isPrivateRoom}\r\n          validatePassword={validatePassword}\r\n        />\r\n        <InviteLinkModal isOpen={isInviteLinkOpen} setIsOpen={setIsInviteLinkOpen}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return renderViewContent();\r\n}\r\n\r\nexport default CreateLobbyView;","export default __webpack_public_path__ + \"static/media/userJoined.390ec013.mp3\";","export default __webpack_public_path__ + \"static/media/userLeft.4ed5c011.mp3\";","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport PrivateRoute from './components/PrivateRoute.js';\r\nimport AuthenticationView from './Views/AuthenticationView/AuthenticationView';\r\nimport HomeView from './Views/HomeView/HomeView';\r\nimport CreateLobbyView from './Views/CreateLobbyView/CreateLobbyView';\r\nimport GameView from './Views/GameView/GameView.js';\r\nimport axios from 'axios';\r\nimport packageJson from '../package.json';\r\n\r\naxios.defaults.baseURL = packageJson.proxy;\r\nfunction App() {\r\n  const isDev = false; // remove for production\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={AuthenticationView} />\r\n        {isDev ? <Route exact path=\"/\" component={HomeView} /> : <PrivateRoute exact path=\"/\" component={HomeView} />}\r\n        {isDev ? <Route exact path=\"/rooms/:roomId\" component={CreateLobbyView} /> : <PrivateRoute exact path=\"/rooms/:roomId\" component={CreateLobbyView} />}\r\n        {isDev ? <Route exact path=\"/game-view\" component={GameView} /> : <PrivateRoute exact path=\"/\" component={GameView} />}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}